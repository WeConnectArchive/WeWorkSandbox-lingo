package lingo

import (
	"reflect"
	"strconv"
	"sync/atomic"
)

type noType struct{}
type numeric interface {
	type int, int16, int32, int64
}

var (
	typeInt16 = reflect.TypeOf(int16(0))
	typeBool  = reflect.TypeOf(bool(false))
)

func TypeOfInt16() reflect.Type { return typeInt16 }
func TypeOfBool() reflect.Type  { return typeBool }

var counter int64
func newRandomName() string {
	value := atomic.AddInt64(&counter, 1)
	return strconv.FormatInt(value, 10)
}
