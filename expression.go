// Code generated by go2go; DO NOT EDIT.


//line expression.go2:1
package lingo

//line expression.go2:1
import (
//line expression.go2:1
 "encoding/json"
//line expression.go2:1
 "fmt"
//line expression.go2:1
 "reflect"
//line expression.go2:1
 "strconv"
//line expression.go2:1
 "strings"
//line expression.go2:1
 "sync/atomic"
//line expression.go2:1
 "testing"
//line expression.go2:1
)

//line expression.go2:9
type Expression interface {
	Type() reflect.Type
}

//line expression.go2:17
type ConstantExpression interface {
	Expression
	Interface() interface{}
}

type PredicateExpression interface {
//line expression.go2:22
 instantiate୦୦TypedExpression୦bool

				Not() PredicateExpression
}

//line expression.go2:38
type BooleanExpression interface {
//line expression.go2:38
 instantiate୦୦TypedExpression୦bool

				EqValue(b bool) BooleanExpression
				Eq(e instantiate୦୦TypedExpression୦bool,) BooleanExpression
}

//line expression.go2:81
var counter int64

//line expression.go2:82
func newRandomName() string {
	value := atomic.AddInt64(&counter, 1)
	return strconv.FormatInt(value, 10)
}

//line expression.go2:85
type instantiate୦୦TypedExpression୦bool interface {
//line expression.go2:14
 Expression
}
//line expression.go2:15
type Importable୦ int

//line expression.go2:15
var _ = json.Compact
//line expression.go2:15
var _ = fmt.Errorf
//line expression.go2:15
var _ = reflect.Append
//line expression.go2:15
var _ = strconv.AppendBool

//line expression.go2:15
type _ strings.Builder

//line expression.go2:15
var _ = atomic.AddInt32
//line expression.go2:15
var _ = testing.AllocsPerRun
