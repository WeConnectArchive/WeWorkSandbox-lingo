// Code generated by go2go; DO NOT EDIT.


//line dsl_test.go2:1
package lingo

//line dsl_test.go2:1
import (
//line dsl_test.go2:1
 "encoding/json"
//line dsl_test.go2:1
 "fmt"
//line dsl_test.go2:1
 "reflect"
//line dsl_test.go2:1
 "strconv"
//line dsl_test.go2:1
 "strings"
//line dsl_test.go2:1
 "sync/atomic"
//line dsl_test.go2:1
 "testing"
//line dsl_test.go2:1
)

//line dsl_test.go2:10
func printDebug(msg string, v interface{}) {
	countNum := atomic.AddInt64(&counter, 1)
	fmt.Println(msg)
	fmt.Printf("%d => %+v\n", countNum, v)
	bytes, err := json.Marshal(v)
	if err != nil {
		panic(err)
	}
	fmt.Printf("%d => %s\n", countNum, string(bytes))
}

//line dsl_test.go2:28
func TestDSL(t *testing.T) {
	var tactor = NewTActorForVariable("asdf")
	printDebug("tactor", tactor)
	printDebug("tactor.type", tactor.Type())
	printDebug("tactor.ActorID", tactor.ActorID)
	printDebug("tactor.ActorID.Type()", tactor.ActorID.Type())
	printDebug("tactor.IsActive", tactor.IsActive)
	printDebug("tactor.IsActive.Type()", tactor.IsActive.Type())
	printDebug("tactor.ActorID.Eq(tactor.ActorID)", tactor.ActorID.Eq(tactor.ActorID))

//line dsl_test.go2:43
}

//line dsl_test.go2:43
var _ = json.Compact
//line dsl_test.go2:43
var _ = fmt.Errorf
//line dsl_test.go2:43
var _ = reflect.Append
//line dsl_test.go2:43
var _ = strconv.AppendBool

//line dsl_test.go2:43
type _ strings.Builder

//line dsl_test.go2:43
var _ = atomic.AddInt32
//line dsl_test.go2:43
var _ = testing.AllocsPerRun
