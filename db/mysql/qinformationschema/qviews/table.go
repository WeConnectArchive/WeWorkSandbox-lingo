// Code generated by Lingo for table information_schema.VIEWS - DO NOT EDIT

package qviews

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QViews {
	return newQViews(alias)
}

func New() QViews {
	return newQViews("")
}

func newQViews(alias string) QViews {
	q := QViews{_alias: alias}
	q.tableCatalog = path.NewStringPath(q, "TABLE_CATALOG")
	q.tableSchema = path.NewStringPath(q, "TABLE_SCHEMA")
	q.tableName = path.NewStringPath(q, "TABLE_NAME")
	q.viewDefinition = path.NewStringPath(q, "VIEW_DEFINITION")
	q.checkOption = path.NewStringPath(q, "CHECK_OPTION")
	q.isUpdatable = path.NewStringPath(q, "IS_UPDATABLE")
	q.definer = path.NewStringPath(q, "DEFINER")
	q.securityType = path.NewStringPath(q, "SECURITY_TYPE")
	q.characterSetClient = path.NewStringPath(q, "CHARACTER_SET_CLIENT")
	q.collationConnection = path.NewStringPath(q, "COLLATION_CONNECTION")
	return q
}

type QViews struct {
	_alias              string
	tableCatalog        path.String
	tableSchema         path.String
	tableName           path.String
	viewDefinition      path.String
	checkOption         path.String
	isUpdatable         path.String
	definer             path.String
	securityType        path.String
	characterSetClient  path.String
	collationConnection path.String
}

// core.Table Functions

func (q QViews) GetColumns() []core.Column {
	return []core.Column{
		q.tableCatalog,
		q.tableSchema,
		q.tableName,
		q.viewDefinition,
		q.checkOption,
		q.isUpdatable,
		q.definer,
		q.securityType,
		q.characterSetClient,
		q.collationConnection,
	}
}

func (q QViews) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QViews) GetAlias() string {
	return q._alias
}

func (q QViews) GetName() string {
	return "VIEWS"
}

func (q QViews) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QViews) TableCatalog() path.String {
	return q.tableCatalog
}

func (q QViews) TableSchema() path.String {
	return q.tableSchema
}

func (q QViews) TableName() path.String {
	return q.tableName
}

func (q QViews) ViewDefinition() path.String {
	return q.viewDefinition
}

func (q QViews) CheckOption() path.String {
	return q.checkOption
}

func (q QViews) IsUpdatable() path.String {
	return q.isUpdatable
}

func (q QViews) Definer() path.String {
	return q.definer
}

func (q QViews) SecurityType() path.String {
	return q.securityType
}

func (q QViews) CharacterSetClient() path.String {
	return q.characterSetClient
}

func (q QViews) CollationConnection() path.String {
	return q.collationConnection
}
