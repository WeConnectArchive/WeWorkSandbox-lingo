// Code generated by Lingo for table information_schema.ST_UNITS_OF_MEASURE - DO NOT EDIT

package qstunitsofmeasure

import (
	"github.com/weworksandbox/lingo/core"
	"github.com/weworksandbox/lingo/core/path"
)

func As(alias string) QStUnitsOfMeasure {
	return newQStUnitsOfMeasure(alias)
}

func New() QStUnitsOfMeasure {
	return newQStUnitsOfMeasure("")
}

func newQStUnitsOfMeasure(alias string) QStUnitsOfMeasure {
	q := QStUnitsOfMeasure{_alias: alias}
	q.unitName = path.NewStringPath(q, "UNIT_NAME")
	q.unitType = path.NewStringPath(q, "UNIT_TYPE")
	q.conversionFactor = path.NewFloat64Path(q, "CONVERSION_FACTOR")
	q.description = path.NewStringPath(q, "DESCRIPTION")
	return q
}

type QStUnitsOfMeasure struct {
	_alias           string
	unitName         path.StringPath
	unitType         path.StringPath
	conversionFactor path.Float64Path
	description      path.StringPath
}

// core.Table Functions

func (q QStUnitsOfMeasure) GetColumns() []core.Column {
	return []core.Column{
		q.unitName,
		q.unitType,
		q.conversionFactor,
		q.description,
	}
}

func (q QStUnitsOfMeasure) GetSQL(d core.Dialect, sql core.SQL) error {
	return path.ExpandTableWithDialect(d, q, sql)
}

func (q QStUnitsOfMeasure) GetAlias() string {
	return q._alias
}

func (q QStUnitsOfMeasure) GetName() string {
	return "ST_UNITS_OF_MEASURE"
}

func (q QStUnitsOfMeasure) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QStUnitsOfMeasure) UnitName() path.StringPath {
	return q.unitName
}

func (q QStUnitsOfMeasure) UnitType() path.StringPath {
	return q.unitType
}

func (q QStUnitsOfMeasure) ConversionFactor() path.Float64Path {
	return q.conversionFactor
}

func (q QStUnitsOfMeasure) Description() path.StringPath {
	return q.description
}
