// Code generated by Lingo for table information_schema.INNODB_CACHED_INDEXES - DO NOT EDIT

package qinnodbcachedindexes

import (
	"github.com/weworksandbox/lingo/core"
	"github.com/weworksandbox/lingo/core/path"
)

func As(alias string) QInnodbCachedIndexes {
	return newQInnodbCachedIndexes(alias)
}

func New() QInnodbCachedIndexes {
	return newQInnodbCachedIndexes("")
}

func newQInnodbCachedIndexes(alias string) QInnodbCachedIndexes {
	q := QInnodbCachedIndexes{_alias: alias}
	q.spaceId = path.NewIntPath(q, "SPACE_ID")
	q.indexId = path.NewInt64Path(q, "INDEX_ID")
	q.nCachedPages = path.NewInt64Path(q, "N_CACHED_PAGES")
	return q
}

type QInnodbCachedIndexes struct {
	_alias       string
	spaceId      path.IntPath
	indexId      path.Int64Path
	nCachedPages path.Int64Path
}

// core.Table Functions

func (q QInnodbCachedIndexes) GetColumns() []core.Column {
	return []core.Column{
		q.spaceId,
		q.indexId,
		q.nCachedPages,
	}
}

func (q QInnodbCachedIndexes) GetSQL(d core.Dialect, sql core.SQL) error {
	return path.ExpandTableWithDialect(d, q, sql)
}

func (q QInnodbCachedIndexes) GetAlias() string {
	return q._alias
}

func (q QInnodbCachedIndexes) GetName() string {
	return "INNODB_CACHED_INDEXES"
}

func (q QInnodbCachedIndexes) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QInnodbCachedIndexes) SpaceId() path.IntPath {
	return q.spaceId
}

func (q QInnodbCachedIndexes) IndexId() path.Int64Path {
	return q.indexId
}

func (q QInnodbCachedIndexes) NCachedPages() path.Int64Path {
	return q.nCachedPages
}
