// Code generated by Lingo for table information_schema.INNODB_BUFFER_POOL_STATS - DO NOT EDIT

package qinnodbbufferpoolstats

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QInnodbBufferPoolStats {
	return newQInnodbBufferPoolStats(alias)
}

func New() QInnodbBufferPoolStats {
	return newQInnodbBufferPoolStats("")
}

func newQInnodbBufferPoolStats(alias string) QInnodbBufferPoolStats {
	q := QInnodbBufferPoolStats{_alias: alias}
	q.poolId = path.NewInt64Path(q, "POOL_ID")
	q.poolSize = path.NewInt64Path(q, "POOL_SIZE")
	q.freeBuffers = path.NewInt64Path(q, "FREE_BUFFERS")
	q.databasePages = path.NewInt64Path(q, "DATABASE_PAGES")
	q.oldDatabasePages = path.NewInt64Path(q, "OLD_DATABASE_PAGES")
	q.modifiedDatabasePages = path.NewInt64Path(q, "MODIFIED_DATABASE_PAGES")
	q.pendingDecompress = path.NewInt64Path(q, "PENDING_DECOMPRESS")
	q.pendingReads = path.NewInt64Path(q, "PENDING_READS")
	q.pendingFlushLru = path.NewInt64Path(q, "PENDING_FLUSH_LRU")
	q.pendingFlushList = path.NewInt64Path(q, "PENDING_FLUSH_LIST")
	q.pagesMadeYoung = path.NewInt64Path(q, "PAGES_MADE_YOUNG")
	q.pagesNotMadeYoung = path.NewInt64Path(q, "PAGES_NOT_MADE_YOUNG")
	q.pagesMadeYoungRate = path.NewFloat64Path(q, "PAGES_MADE_YOUNG_RATE")
	q.pagesMadeNotYoungRate = path.NewFloat64Path(q, "PAGES_MADE_NOT_YOUNG_RATE")
	q.numberPagesRead = path.NewInt64Path(q, "NUMBER_PAGES_READ")
	q.numberPagesCreated = path.NewInt64Path(q, "NUMBER_PAGES_CREATED")
	q.numberPagesWritten = path.NewInt64Path(q, "NUMBER_PAGES_WRITTEN")
	q.pagesReadRate = path.NewFloat64Path(q, "PAGES_READ_RATE")
	q.pagesCreateRate = path.NewFloat64Path(q, "PAGES_CREATE_RATE")
	q.pagesWrittenRate = path.NewFloat64Path(q, "PAGES_WRITTEN_RATE")
	q.numberPagesGet = path.NewInt64Path(q, "NUMBER_PAGES_GET")
	q.hitRate = path.NewInt64Path(q, "HIT_RATE")
	q.youngMakePerThousandGets = path.NewInt64Path(q, "YOUNG_MAKE_PER_THOUSAND_GETS")
	q.notYoungMakePerThousandGets = path.NewInt64Path(q, "NOT_YOUNG_MAKE_PER_THOUSAND_GETS")
	q.numberPagesReadAhead = path.NewInt64Path(q, "NUMBER_PAGES_READ_AHEAD")
	q.numberReadAheadEvicted = path.NewInt64Path(q, "NUMBER_READ_AHEAD_EVICTED")
	q.readAheadRate = path.NewFloat64Path(q, "READ_AHEAD_RATE")
	q.readAheadEvictedRate = path.NewFloat64Path(q, "READ_AHEAD_EVICTED_RATE")
	q.lruIoTotal = path.NewInt64Path(q, "LRU_IO_TOTAL")
	q.lruIoCurrent = path.NewInt64Path(q, "LRU_IO_CURRENT")
	q.uncompressTotal = path.NewInt64Path(q, "UNCOMPRESS_TOTAL")
	q.uncompressCurrent = path.NewInt64Path(q, "UNCOMPRESS_CURRENT")
	return q
}

type QInnodbBufferPoolStats struct {
	_alias                      string
	poolId                      path.Int64Path
	poolSize                    path.Int64Path
	freeBuffers                 path.Int64Path
	databasePages               path.Int64Path
	oldDatabasePages            path.Int64Path
	modifiedDatabasePages       path.Int64Path
	pendingDecompress           path.Int64Path
	pendingReads                path.Int64Path
	pendingFlushLru             path.Int64Path
	pendingFlushList            path.Int64Path
	pagesMadeYoung              path.Int64Path
	pagesNotMadeYoung           path.Int64Path
	pagesMadeYoungRate          path.Float64Path
	pagesMadeNotYoungRate       path.Float64Path
	numberPagesRead             path.Int64Path
	numberPagesCreated          path.Int64Path
	numberPagesWritten          path.Int64Path
	pagesReadRate               path.Float64Path
	pagesCreateRate             path.Float64Path
	pagesWrittenRate            path.Float64Path
	numberPagesGet              path.Int64Path
	hitRate                     path.Int64Path
	youngMakePerThousandGets    path.Int64Path
	notYoungMakePerThousandGets path.Int64Path
	numberPagesReadAhead        path.Int64Path
	numberReadAheadEvicted      path.Int64Path
	readAheadRate               path.Float64Path
	readAheadEvictedRate        path.Float64Path
	lruIoTotal                  path.Int64Path
	lruIoCurrent                path.Int64Path
	uncompressTotal             path.Int64Path
	uncompressCurrent           path.Int64Path
}

// core.Table Functions

func (q QInnodbBufferPoolStats) GetColumns() []core.Column {
	return []core.Column{
		q.poolId,
		q.poolSize,
		q.freeBuffers,
		q.databasePages,
		q.oldDatabasePages,
		q.modifiedDatabasePages,
		q.pendingDecompress,
		q.pendingReads,
		q.pendingFlushLru,
		q.pendingFlushList,
		q.pagesMadeYoung,
		q.pagesNotMadeYoung,
		q.pagesMadeYoungRate,
		q.pagesMadeNotYoungRate,
		q.numberPagesRead,
		q.numberPagesCreated,
		q.numberPagesWritten,
		q.pagesReadRate,
		q.pagesCreateRate,
		q.pagesWrittenRate,
		q.numberPagesGet,
		q.hitRate,
		q.youngMakePerThousandGets,
		q.notYoungMakePerThousandGets,
		q.numberPagesReadAhead,
		q.numberReadAheadEvicted,
		q.readAheadRate,
		q.readAheadEvictedRate,
		q.lruIoTotal,
		q.lruIoCurrent,
		q.uncompressTotal,
		q.uncompressCurrent,
	}
}

func (q QInnodbBufferPoolStats) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QInnodbBufferPoolStats) GetAlias() string {
	return q._alias
}

func (q QInnodbBufferPoolStats) GetName() string {
	return "INNODB_BUFFER_POOL_STATS"
}

func (q QInnodbBufferPoolStats) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QInnodbBufferPoolStats) PoolId() path.Int64Path {
	return q.poolId
}

func (q QInnodbBufferPoolStats) PoolSize() path.Int64Path {
	return q.poolSize
}

func (q QInnodbBufferPoolStats) FreeBuffers() path.Int64Path {
	return q.freeBuffers
}

func (q QInnodbBufferPoolStats) DatabasePages() path.Int64Path {
	return q.databasePages
}

func (q QInnodbBufferPoolStats) OldDatabasePages() path.Int64Path {
	return q.oldDatabasePages
}

func (q QInnodbBufferPoolStats) ModifiedDatabasePages() path.Int64Path {
	return q.modifiedDatabasePages
}

func (q QInnodbBufferPoolStats) PendingDecompress() path.Int64Path {
	return q.pendingDecompress
}

func (q QInnodbBufferPoolStats) PendingReads() path.Int64Path {
	return q.pendingReads
}

func (q QInnodbBufferPoolStats) PendingFlushLru() path.Int64Path {
	return q.pendingFlushLru
}

func (q QInnodbBufferPoolStats) PendingFlushList() path.Int64Path {
	return q.pendingFlushList
}

func (q QInnodbBufferPoolStats) PagesMadeYoung() path.Int64Path {
	return q.pagesMadeYoung
}

func (q QInnodbBufferPoolStats) PagesNotMadeYoung() path.Int64Path {
	return q.pagesNotMadeYoung
}

func (q QInnodbBufferPoolStats) PagesMadeYoungRate() path.Float64Path {
	return q.pagesMadeYoungRate
}

func (q QInnodbBufferPoolStats) PagesMadeNotYoungRate() path.Float64Path {
	return q.pagesMadeNotYoungRate
}

func (q QInnodbBufferPoolStats) NumberPagesRead() path.Int64Path {
	return q.numberPagesRead
}

func (q QInnodbBufferPoolStats) NumberPagesCreated() path.Int64Path {
	return q.numberPagesCreated
}

func (q QInnodbBufferPoolStats) NumberPagesWritten() path.Int64Path {
	return q.numberPagesWritten
}

func (q QInnodbBufferPoolStats) PagesReadRate() path.Float64Path {
	return q.pagesReadRate
}

func (q QInnodbBufferPoolStats) PagesCreateRate() path.Float64Path {
	return q.pagesCreateRate
}

func (q QInnodbBufferPoolStats) PagesWrittenRate() path.Float64Path {
	return q.pagesWrittenRate
}

func (q QInnodbBufferPoolStats) NumberPagesGet() path.Int64Path {
	return q.numberPagesGet
}

func (q QInnodbBufferPoolStats) HitRate() path.Int64Path {
	return q.hitRate
}

func (q QInnodbBufferPoolStats) YoungMakePerThousandGets() path.Int64Path {
	return q.youngMakePerThousandGets
}

func (q QInnodbBufferPoolStats) NotYoungMakePerThousandGets() path.Int64Path {
	return q.notYoungMakePerThousandGets
}

func (q QInnodbBufferPoolStats) NumberPagesReadAhead() path.Int64Path {
	return q.numberPagesReadAhead
}

func (q QInnodbBufferPoolStats) NumberReadAheadEvicted() path.Int64Path {
	return q.numberReadAheadEvicted
}

func (q QInnodbBufferPoolStats) ReadAheadRate() path.Float64Path {
	return q.readAheadRate
}

func (q QInnodbBufferPoolStats) ReadAheadEvictedRate() path.Float64Path {
	return q.readAheadEvictedRate
}

func (q QInnodbBufferPoolStats) LruIoTotal() path.Int64Path {
	return q.lruIoTotal
}

func (q QInnodbBufferPoolStats) LruIoCurrent() path.Int64Path {
	return q.lruIoCurrent
}

func (q QInnodbBufferPoolStats) UncompressTotal() path.Int64Path {
	return q.uncompressTotal
}

func (q QInnodbBufferPoolStats) UncompressCurrent() path.Int64Path {
	return q.uncompressCurrent
}
