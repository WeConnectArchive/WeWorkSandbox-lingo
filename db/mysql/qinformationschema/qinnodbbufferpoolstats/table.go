// Code generated by Lingo for table information_schema.INNODB_BUFFER_POOL_STATS - DO NOT EDIT

package qinnodbbufferpoolstats

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QInnodbBufferPoolStats {
	return newQInnodbBufferPoolStats(alias)
}

func New() QInnodbBufferPoolStats {
	return newQInnodbBufferPoolStats("")
}

func newQInnodbBufferPoolStats(alias string) QInnodbBufferPoolStats {
	q := QInnodbBufferPoolStats{_alias: alias}
	q.poolId = path.NewInt64Path(q, "POOL_ID")
	q.poolSize = path.NewInt64Path(q, "POOL_SIZE")
	q.freeBuffers = path.NewInt64Path(q, "FREE_BUFFERS")
	q.databasePages = path.NewInt64Path(q, "DATABASE_PAGES")
	q.oldDatabasePages = path.NewInt64Path(q, "OLD_DATABASE_PAGES")
	q.modifiedDatabasePages = path.NewInt64Path(q, "MODIFIED_DATABASE_PAGES")
	q.pendingDecompress = path.NewInt64Path(q, "PENDING_DECOMPRESS")
	q.pendingReads = path.NewInt64Path(q, "PENDING_READS")
	q.pendingFlushLru = path.NewInt64Path(q, "PENDING_FLUSH_LRU")
	q.pendingFlushList = path.NewInt64Path(q, "PENDING_FLUSH_LIST")
	q.pagesMadeYoung = path.NewInt64Path(q, "PAGES_MADE_YOUNG")
	q.pagesNotMadeYoung = path.NewInt64Path(q, "PAGES_NOT_MADE_YOUNG")
	q.pagesMadeYoungRate = path.NewFloat64Path(q, "PAGES_MADE_YOUNG_RATE")
	q.pagesMadeNotYoungRate = path.NewFloat64Path(q, "PAGES_MADE_NOT_YOUNG_RATE")
	q.numberPagesRead = path.NewInt64Path(q, "NUMBER_PAGES_READ")
	q.numberPagesCreated = path.NewInt64Path(q, "NUMBER_PAGES_CREATED")
	q.numberPagesWritten = path.NewInt64Path(q, "NUMBER_PAGES_WRITTEN")
	q.pagesReadRate = path.NewFloat64Path(q, "PAGES_READ_RATE")
	q.pagesCreateRate = path.NewFloat64Path(q, "PAGES_CREATE_RATE")
	q.pagesWrittenRate = path.NewFloat64Path(q, "PAGES_WRITTEN_RATE")
	q.numberPagesGet = path.NewInt64Path(q, "NUMBER_PAGES_GET")
	q.hitRate = path.NewInt64Path(q, "HIT_RATE")
	q.youngMakePerThousandGets = path.NewInt64Path(q, "YOUNG_MAKE_PER_THOUSAND_GETS")
	q.notYoungMakePerThousandGets = path.NewInt64Path(q, "NOT_YOUNG_MAKE_PER_THOUSAND_GETS")
	q.numberPagesReadAhead = path.NewInt64Path(q, "NUMBER_PAGES_READ_AHEAD")
	q.numberReadAheadEvicted = path.NewInt64Path(q, "NUMBER_READ_AHEAD_EVICTED")
	q.readAheadRate = path.NewFloat64Path(q, "READ_AHEAD_RATE")
	q.readAheadEvictedRate = path.NewFloat64Path(q, "READ_AHEAD_EVICTED_RATE")
	q.lruIoTotal = path.NewInt64Path(q, "LRU_IO_TOTAL")
	q.lruIoCurrent = path.NewInt64Path(q, "LRU_IO_CURRENT")
	q.uncompressTotal = path.NewInt64Path(q, "UNCOMPRESS_TOTAL")
	q.uncompressCurrent = path.NewInt64Path(q, "UNCOMPRESS_CURRENT")
	return q
}

type QInnodbBufferPoolStats struct {
	_alias                      string
	poolId                      path.Int64
	poolSize                    path.Int64
	freeBuffers                 path.Int64
	databasePages               path.Int64
	oldDatabasePages            path.Int64
	modifiedDatabasePages       path.Int64
	pendingDecompress           path.Int64
	pendingReads                path.Int64
	pendingFlushLru             path.Int64
	pendingFlushList            path.Int64
	pagesMadeYoung              path.Int64
	pagesNotMadeYoung           path.Int64
	pagesMadeYoungRate          path.Float64
	pagesMadeNotYoungRate       path.Float64
	numberPagesRead             path.Int64
	numberPagesCreated          path.Int64
	numberPagesWritten          path.Int64
	pagesReadRate               path.Float64
	pagesCreateRate             path.Float64
	pagesWrittenRate            path.Float64
	numberPagesGet              path.Int64
	hitRate                     path.Int64
	youngMakePerThousandGets    path.Int64
	notYoungMakePerThousandGets path.Int64
	numberPagesReadAhead        path.Int64
	numberReadAheadEvicted      path.Int64
	readAheadRate               path.Float64
	readAheadEvictedRate        path.Float64
	lruIoTotal                  path.Int64
	lruIoCurrent                path.Int64
	uncompressTotal             path.Int64
	uncompressCurrent           path.Int64
}

// core.Table Functions

func (q QInnodbBufferPoolStats) GetColumns() []core.Column {
	return []core.Column{
		q.poolId,
		q.poolSize,
		q.freeBuffers,
		q.databasePages,
		q.oldDatabasePages,
		q.modifiedDatabasePages,
		q.pendingDecompress,
		q.pendingReads,
		q.pendingFlushLru,
		q.pendingFlushList,
		q.pagesMadeYoung,
		q.pagesNotMadeYoung,
		q.pagesMadeYoungRate,
		q.pagesMadeNotYoungRate,
		q.numberPagesRead,
		q.numberPagesCreated,
		q.numberPagesWritten,
		q.pagesReadRate,
		q.pagesCreateRate,
		q.pagesWrittenRate,
		q.numberPagesGet,
		q.hitRate,
		q.youngMakePerThousandGets,
		q.notYoungMakePerThousandGets,
		q.numberPagesReadAhead,
		q.numberReadAheadEvicted,
		q.readAheadRate,
		q.readAheadEvictedRate,
		q.lruIoTotal,
		q.lruIoCurrent,
		q.uncompressTotal,
		q.uncompressCurrent,
	}
}

func (q QInnodbBufferPoolStats) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QInnodbBufferPoolStats) GetAlias() string {
	return q._alias
}

func (q QInnodbBufferPoolStats) GetName() string {
	return "INNODB_BUFFER_POOL_STATS"
}

func (q QInnodbBufferPoolStats) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QInnodbBufferPoolStats) PoolId() path.Int64 {
	return q.poolId
}

func (q QInnodbBufferPoolStats) PoolSize() path.Int64 {
	return q.poolSize
}

func (q QInnodbBufferPoolStats) FreeBuffers() path.Int64 {
	return q.freeBuffers
}

func (q QInnodbBufferPoolStats) DatabasePages() path.Int64 {
	return q.databasePages
}

func (q QInnodbBufferPoolStats) OldDatabasePages() path.Int64 {
	return q.oldDatabasePages
}

func (q QInnodbBufferPoolStats) ModifiedDatabasePages() path.Int64 {
	return q.modifiedDatabasePages
}

func (q QInnodbBufferPoolStats) PendingDecompress() path.Int64 {
	return q.pendingDecompress
}

func (q QInnodbBufferPoolStats) PendingReads() path.Int64 {
	return q.pendingReads
}

func (q QInnodbBufferPoolStats) PendingFlushLru() path.Int64 {
	return q.pendingFlushLru
}

func (q QInnodbBufferPoolStats) PendingFlushList() path.Int64 {
	return q.pendingFlushList
}

func (q QInnodbBufferPoolStats) PagesMadeYoung() path.Int64 {
	return q.pagesMadeYoung
}

func (q QInnodbBufferPoolStats) PagesNotMadeYoung() path.Int64 {
	return q.pagesNotMadeYoung
}

func (q QInnodbBufferPoolStats) PagesMadeYoungRate() path.Float64 {
	return q.pagesMadeYoungRate
}

func (q QInnodbBufferPoolStats) PagesMadeNotYoungRate() path.Float64 {
	return q.pagesMadeNotYoungRate
}

func (q QInnodbBufferPoolStats) NumberPagesRead() path.Int64 {
	return q.numberPagesRead
}

func (q QInnodbBufferPoolStats) NumberPagesCreated() path.Int64 {
	return q.numberPagesCreated
}

func (q QInnodbBufferPoolStats) NumberPagesWritten() path.Int64 {
	return q.numberPagesWritten
}

func (q QInnodbBufferPoolStats) PagesReadRate() path.Float64 {
	return q.pagesReadRate
}

func (q QInnodbBufferPoolStats) PagesCreateRate() path.Float64 {
	return q.pagesCreateRate
}

func (q QInnodbBufferPoolStats) PagesWrittenRate() path.Float64 {
	return q.pagesWrittenRate
}

func (q QInnodbBufferPoolStats) NumberPagesGet() path.Int64 {
	return q.numberPagesGet
}

func (q QInnodbBufferPoolStats) HitRate() path.Int64 {
	return q.hitRate
}

func (q QInnodbBufferPoolStats) YoungMakePerThousandGets() path.Int64 {
	return q.youngMakePerThousandGets
}

func (q QInnodbBufferPoolStats) NotYoungMakePerThousandGets() path.Int64 {
	return q.notYoungMakePerThousandGets
}

func (q QInnodbBufferPoolStats) NumberPagesReadAhead() path.Int64 {
	return q.numberPagesReadAhead
}

func (q QInnodbBufferPoolStats) NumberReadAheadEvicted() path.Int64 {
	return q.numberReadAheadEvicted
}

func (q QInnodbBufferPoolStats) ReadAheadRate() path.Float64 {
	return q.readAheadRate
}

func (q QInnodbBufferPoolStats) ReadAheadEvictedRate() path.Float64 {
	return q.readAheadEvictedRate
}

func (q QInnodbBufferPoolStats) LruIoTotal() path.Int64 {
	return q.lruIoTotal
}

func (q QInnodbBufferPoolStats) LruIoCurrent() path.Int64 {
	return q.lruIoCurrent
}

func (q QInnodbBufferPoolStats) UncompressTotal() path.Int64 {
	return q.uncompressTotal
}

func (q QInnodbBufferPoolStats) UncompressCurrent() path.Int64 {
	return q.uncompressCurrent
}
