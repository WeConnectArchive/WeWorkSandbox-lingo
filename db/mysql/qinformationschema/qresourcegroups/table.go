// Code generated by Lingo for table information_schema.RESOURCE_GROUPS - DO NOT EDIT

package qresourcegroups

import (
	"github.com/weworksandbox/lingo/core"
	"github.com/weworksandbox/lingo/core/path"
)

func As(alias string) QResourceGroups {
	return newQResourceGroups(alias)
}

func New() QResourceGroups {
	return newQResourceGroups("")
}

func newQResourceGroups(alias string) QResourceGroups {
	q := QResourceGroups{_alias: alias}
	q.resourceGroupName = path.NewStringPath(q, "RESOURCE_GROUP_NAME")
	q.resourceGroupType = NewUnknownPathType(q, "RESOURCE_GROUP_TYPE")
	q.resourceGroupEnabled = path.NewBoolPath(q, "RESOURCE_GROUP_ENABLED")
	q.vcpuIds = NewUnknownPathType(q, "VCPU_IDS")
	q.threadPriority = path.NewIntPath(q, "THREAD_PRIORITY")
	return q
}

type QResourceGroups struct {
	_alias               string
	resourceGroupName    path.StringPath
	resourceGroupType    UnknownPathType
	resourceGroupEnabled path.BoolPath
	vcpuIds              UnknownPathType
	threadPriority       path.IntPath
}

// core.Table Functions

func (q QResourceGroups) GetColumns() []core.Column {
	return []core.Column{
		q.resourceGroupName,
		q.resourceGroupType,
		q.resourceGroupEnabled,
		q.vcpuIds,
		q.threadPriority,
	}
}

func (q QResourceGroups) GetSQL(d core.Dialect, sql core.SQL) error {
	return path.ExpandTableWithDialect(d, q, sql)
}

func (q QResourceGroups) GetAlias() string {
	return q._alias
}

func (q QResourceGroups) GetName() string {
	return "RESOURCE_GROUPS"
}

func (q QResourceGroups) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QResourceGroups) ResourceGroupName() path.StringPath {
	return q.resourceGroupName
}

func (q QResourceGroups) ResourceGroupType() UnknownPathType {
	return q.resourceGroupType
}

func (q QResourceGroups) ResourceGroupEnabled() path.BoolPath {
	return q.resourceGroupEnabled
}

func (q QResourceGroups) VcpuIds() UnknownPathType {
	return q.vcpuIds
}

func (q QResourceGroups) ThreadPriority() path.IntPath {
	return q.threadPriority
}
