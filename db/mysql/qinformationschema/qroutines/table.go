// Code generated by Lingo for table information_schema.ROUTINES - DO NOT EDIT

package qroutines

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QRoutines {
	return newQRoutines(alias)
}

func New() QRoutines {
	return newQRoutines("")
}

func newQRoutines(alias string) QRoutines {
	q := QRoutines{_alias: alias}
	q.specificName = path.NewStringPath(q, "SPECIFIC_NAME")
	q.routineCatalog = path.NewStringPath(q, "ROUTINE_CATALOG")
	q.routineSchema = path.NewStringPath(q, "ROUTINE_SCHEMA")
	q.routineName = path.NewStringPath(q, "ROUTINE_NAME")
	q.routineType = path.NewStringPath(q, "ROUTINE_TYPE")
	q.dataType = path.NewStringPath(q, "DATA_TYPE")
	q.characterMaximumLength = path.NewIntPath(q, "CHARACTER_MAXIMUM_LENGTH")
	q.characterOctetLength = path.NewIntPath(q, "CHARACTER_OCTET_LENGTH")
	q.numericPrecision = path.NewInt64Path(q, "NUMERIC_PRECISION")
	q.numericScale = path.NewIntPath(q, "NUMERIC_SCALE")
	q.datetimePrecision = path.NewInt64Path(q, "DATETIME_PRECISION")
	q.characterSetName = path.NewStringPath(q, "CHARACTER_SET_NAME")
	q.collationName = path.NewStringPath(q, "COLLATION_NAME")
	q.dtdIdentifier = path.NewStringPath(q, "DTD_IDENTIFIER")
	q.routineBody = path.NewStringPath(q, "ROUTINE_BODY")
	q.routineDefinition = path.NewStringPath(q, "ROUTINE_DEFINITION")
	q.externalName = path.NewStringPath(q, "EXTERNAL_NAME")
	q.externalLanguage = path.NewStringPath(q, "EXTERNAL_LANGUAGE")
	q.parameterStyle = path.NewStringPath(q, "PARAMETER_STYLE")
	q.isDeterministic = path.NewStringPath(q, "IS_DETERMINISTIC")
	q.sqlDataAccess = path.NewStringPath(q, "SQL_DATA_ACCESS")
	q.sqlPath = path.NewStringPath(q, "SQL_PATH")
	q.securityType = path.NewStringPath(q, "SECURITY_TYPE")
	q.created = path.NewTimePath(q, "CREATED")
	q.lastAltered = path.NewTimePath(q, "LAST_ALTERED")
	q.sqlMode = path.NewStringPath(q, "SQL_MODE")
	q.routineComment = path.NewStringPath(q, "ROUTINE_COMMENT")
	q.definer = path.NewStringPath(q, "DEFINER")
	q.characterSetClient = path.NewStringPath(q, "CHARACTER_SET_CLIENT")
	q.collationConnection = path.NewStringPath(q, "COLLATION_CONNECTION")
	q.databaseCollation = path.NewStringPath(q, "DATABASE_COLLATION")
	return q
}

type QRoutines struct {
	_alias                 string
	specificName           path.String
	routineCatalog         path.String
	routineSchema          path.String
	routineName            path.String
	routineType            path.String
	dataType               path.String
	characterMaximumLength path.Int
	characterOctetLength   path.Int
	numericPrecision       path.Int64
	numericScale           path.Int
	datetimePrecision      path.Int64
	characterSetName       path.String
	collationName          path.String
	dtdIdentifier          path.String
	routineBody            path.String
	routineDefinition      path.String
	externalName           path.String
	externalLanguage       path.String
	parameterStyle         path.String
	isDeterministic        path.String
	sqlDataAccess          path.String
	sqlPath                path.String
	securityType           path.String
	created                path.Time
	lastAltered            path.Time
	sqlMode                path.String
	routineComment         path.String
	definer                path.String
	characterSetClient     path.String
	collationConnection    path.String
	databaseCollation      path.String
}

// core.Table Functions

func (q QRoutines) GetColumns() []core.Column {
	return []core.Column{
		q.specificName,
		q.routineCatalog,
		q.routineSchema,
		q.routineName,
		q.routineType,
		q.dataType,
		q.characterMaximumLength,
		q.characterOctetLength,
		q.numericPrecision,
		q.numericScale,
		q.datetimePrecision,
		q.characterSetName,
		q.collationName,
		q.dtdIdentifier,
		q.routineBody,
		q.routineDefinition,
		q.externalName,
		q.externalLanguage,
		q.parameterStyle,
		q.isDeterministic,
		q.sqlDataAccess,
		q.sqlPath,
		q.securityType,
		q.created,
		q.lastAltered,
		q.sqlMode,
		q.routineComment,
		q.definer,
		q.characterSetClient,
		q.collationConnection,
		q.databaseCollation,
	}
}

func (q QRoutines) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QRoutines) GetAlias() string {
	return q._alias
}

func (q QRoutines) GetName() string {
	return "ROUTINES"
}

func (q QRoutines) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QRoutines) SpecificName() path.String {
	return q.specificName
}

func (q QRoutines) RoutineCatalog() path.String {
	return q.routineCatalog
}

func (q QRoutines) RoutineSchema() path.String {
	return q.routineSchema
}

func (q QRoutines) RoutineName() path.String {
	return q.routineName
}

func (q QRoutines) RoutineType() path.String {
	return q.routineType
}

func (q QRoutines) DataType() path.String {
	return q.dataType
}

func (q QRoutines) CharacterMaximumLength() path.Int {
	return q.characterMaximumLength
}

func (q QRoutines) CharacterOctetLength() path.Int {
	return q.characterOctetLength
}

func (q QRoutines) NumericPrecision() path.Int64 {
	return q.numericPrecision
}

func (q QRoutines) NumericScale() path.Int {
	return q.numericScale
}

func (q QRoutines) DatetimePrecision() path.Int64 {
	return q.datetimePrecision
}

func (q QRoutines) CharacterSetName() path.String {
	return q.characterSetName
}

func (q QRoutines) CollationName() path.String {
	return q.collationName
}

func (q QRoutines) DtdIdentifier() path.String {
	return q.dtdIdentifier
}

func (q QRoutines) RoutineBody() path.String {
	return q.routineBody
}

func (q QRoutines) RoutineDefinition() path.String {
	return q.routineDefinition
}

func (q QRoutines) ExternalName() path.String {
	return q.externalName
}

func (q QRoutines) ExternalLanguage() path.String {
	return q.externalLanguage
}

func (q QRoutines) ParameterStyle() path.String {
	return q.parameterStyle
}

func (q QRoutines) IsDeterministic() path.String {
	return q.isDeterministic
}

func (q QRoutines) SqlDataAccess() path.String {
	return q.sqlDataAccess
}

func (q QRoutines) SqlPath() path.String {
	return q.sqlPath
}

func (q QRoutines) SecurityType() path.String {
	return q.securityType
}

func (q QRoutines) Created() path.Time {
	return q.created
}

func (q QRoutines) LastAltered() path.Time {
	return q.lastAltered
}

func (q QRoutines) SqlMode() path.String {
	return q.sqlMode
}

func (q QRoutines) RoutineComment() path.String {
	return q.routineComment
}

func (q QRoutines) Definer() path.String {
	return q.definer
}

func (q QRoutines) CharacterSetClient() path.String {
	return q.characterSetClient
}

func (q QRoutines) CollationConnection() path.String {
	return q.collationConnection
}

func (q QRoutines) DatabaseCollation() path.String {
	return q.databaseCollation
}
