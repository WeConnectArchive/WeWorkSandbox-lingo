// Code generated by Lingo for table information_schema.INNODB_TABLES - DO NOT EDIT

package qinnodbtables

import (
	"github.com/weworksandbox/lingo/core"
	"github.com/weworksandbox/lingo/core/path"
)

func As(alias string) QInnodbTables {
	return newQInnodbTables(alias)
}

func New() QInnodbTables {
	return newQInnodbTables("")
}

func newQInnodbTables(alias string) QInnodbTables {
	q := QInnodbTables{_alias: alias}
	q.tableId = path.NewInt64Path(q, "TABLE_ID")
	q.name = path.NewStringPath(q, "NAME")
	q.flag = path.NewIntPath(q, "FLAG")
	q.nCols = path.NewIntPath(q, "N_COLS")
	q.space = path.NewInt64Path(q, "SPACE")
	q.rowFormat = path.NewStringPath(q, "ROW_FORMAT")
	q.zipPageSize = path.NewIntPath(q, "ZIP_PAGE_SIZE")
	q.spaceType = path.NewStringPath(q, "SPACE_TYPE")
	q.instantCols = path.NewIntPath(q, "INSTANT_COLS")
	return q
}

type QInnodbTables struct {
	_alias      string
	tableId     path.Int64Path
	name        path.StringPath
	flag        path.IntPath
	nCols       path.IntPath
	space       path.Int64Path
	rowFormat   path.StringPath
	zipPageSize path.IntPath
	spaceType   path.StringPath
	instantCols path.IntPath
}

// core.Table Functions

func (q QInnodbTables) GetColumns() []core.Column {
	return []core.Column{
		q.tableId,
		q.name,
		q.flag,
		q.nCols,
		q.space,
		q.rowFormat,
		q.zipPageSize,
		q.spaceType,
		q.instantCols,
	}
}

func (q QInnodbTables) GetSQL(d core.Dialect, sql core.SQL) error {
	return path.ExpandTableWithDialect(d, q, sql)
}

func (q QInnodbTables) GetAlias() string {
	return q._alias
}

func (q QInnodbTables) GetName() string {
	return "INNODB_TABLES"
}

func (q QInnodbTables) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QInnodbTables) TableId() path.Int64Path {
	return q.tableId
}

func (q QInnodbTables) Name() path.StringPath {
	return q.name
}

func (q QInnodbTables) Flag() path.IntPath {
	return q.flag
}

func (q QInnodbTables) NCols() path.IntPath {
	return q.nCols
}

func (q QInnodbTables) Space() path.Int64Path {
	return q.space
}

func (q QInnodbTables) RowFormat() path.StringPath {
	return q.rowFormat
}

func (q QInnodbTables) ZipPageSize() path.IntPath {
	return q.zipPageSize
}

func (q QInnodbTables) SpaceType() path.StringPath {
	return q.spaceType
}

func (q QInnodbTables) InstantCols() path.IntPath {
	return q.instantCols
}
