// Code generated by Lingo for table information_schema.TABLES - DO NOT EDIT

package qtables

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QTables {
	return newQTables(alias)
}

func New() QTables {
	return newQTables("")
}

func newQTables(alias string) QTables {
	q := QTables{_alias: alias}
	q.tableCatalog = path.NewStringPath(q, "TABLE_CATALOG")
	q.tableSchema = path.NewStringPath(q, "TABLE_SCHEMA")
	q.tableName = path.NewStringPath(q, "TABLE_NAME")
	q.tableType = path.NewStringPath(q, "TABLE_TYPE")
	q.engine = path.NewStringPath(q, "ENGINE")
	q.version = path.NewInt64Path(q, "VERSION")
	q.rowFormat = path.NewStringPath(q, "ROW_FORMAT")
	q.tableRows = path.NewInt64Path(q, "TABLE_ROWS")
	q.avgRowLength = path.NewInt64Path(q, "AVG_ROW_LENGTH")
	q.dataLength = path.NewInt64Path(q, "DATA_LENGTH")
	q.maxDataLength = path.NewInt64Path(q, "MAX_DATA_LENGTH")
	q.indexLength = path.NewInt64Path(q, "INDEX_LENGTH")
	q.dataFree = path.NewInt64Path(q, "DATA_FREE")
	q.autoIncrement = path.NewInt64Path(q, "AUTO_INCREMENT")
	q.createTime = path.NewTimePath(q, "CREATE_TIME")
	q.updateTime = path.NewTimePath(q, "UPDATE_TIME")
	q.checkTime = path.NewTimePath(q, "CHECK_TIME")
	q.tableCollation = path.NewStringPath(q, "TABLE_COLLATION")
	q.checksum = path.NewInt64Path(q, "CHECKSUM")
	q.createOptions = path.NewStringPath(q, "CREATE_OPTIONS")
	q.tableComment = path.NewStringPath(q, "TABLE_COMMENT")
	return q
}

type QTables struct {
	_alias         string
	tableCatalog   path.String
	tableSchema    path.String
	tableName      path.String
	tableType      path.String
	engine         path.String
	version        path.Int64
	rowFormat      path.String
	tableRows      path.Int64
	avgRowLength   path.Int64
	dataLength     path.Int64
	maxDataLength  path.Int64
	indexLength    path.Int64
	dataFree       path.Int64
	autoIncrement  path.Int64
	createTime     path.Time
	updateTime     path.Time
	checkTime      path.Time
	tableCollation path.String
	checksum       path.Int64
	createOptions  path.String
	tableComment   path.String
}

// core.Table Functions

func (q QTables) GetColumns() []core.Column {
	return []core.Column{
		q.tableCatalog,
		q.tableSchema,
		q.tableName,
		q.tableType,
		q.engine,
		q.version,
		q.rowFormat,
		q.tableRows,
		q.avgRowLength,
		q.dataLength,
		q.maxDataLength,
		q.indexLength,
		q.dataFree,
		q.autoIncrement,
		q.createTime,
		q.updateTime,
		q.checkTime,
		q.tableCollation,
		q.checksum,
		q.createOptions,
		q.tableComment,
	}
}

func (q QTables) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QTables) GetAlias() string {
	return q._alias
}

func (q QTables) GetName() string {
	return "TABLES"
}

func (q QTables) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QTables) TableCatalog() path.String {
	return q.tableCatalog
}

func (q QTables) TableSchema() path.String {
	return q.tableSchema
}

func (q QTables) TableName() path.String {
	return q.tableName
}

func (q QTables) TableType() path.String {
	return q.tableType
}

func (q QTables) Engine() path.String {
	return q.engine
}

func (q QTables) Version() path.Int64 {
	return q.version
}

func (q QTables) RowFormat() path.String {
	return q.rowFormat
}

func (q QTables) TableRows() path.Int64 {
	return q.tableRows
}

func (q QTables) AvgRowLength() path.Int64 {
	return q.avgRowLength
}

func (q QTables) DataLength() path.Int64 {
	return q.dataLength
}

func (q QTables) MaxDataLength() path.Int64 {
	return q.maxDataLength
}

func (q QTables) IndexLength() path.Int64 {
	return q.indexLength
}

func (q QTables) DataFree() path.Int64 {
	return q.dataFree
}

func (q QTables) AutoIncrement() path.Int64 {
	return q.autoIncrement
}

func (q QTables) CreateTime() path.Time {
	return q.createTime
}

func (q QTables) UpdateTime() path.Time {
	return q.updateTime
}

func (q QTables) CheckTime() path.Time {
	return q.checkTime
}

func (q QTables) TableCollation() path.String {
	return q.tableCollation
}

func (q QTables) Checksum() path.Int64 {
	return q.checksum
}

func (q QTables) CreateOptions() path.String {
	return q.createOptions
}

func (q QTables) TableComment() path.String {
	return q.tableComment
}
