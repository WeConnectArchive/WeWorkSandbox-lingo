// Code generated by Lingo for table information_schema.INNODB_VIRTUAL - DO NOT EDIT

package qinnodbvirtual

import (
	"github.com/weworksandbox/lingo/core"
	"github.com/weworksandbox/lingo/core/path"
)

func As(alias string) QInnodbVirtual {
	return newQInnodbVirtual(alias)
}

func New() QInnodbVirtual {
	return newQInnodbVirtual("")
}

func newQInnodbVirtual(alias string) QInnodbVirtual {
	q := QInnodbVirtual{_alias: alias}
	q.tableId = path.NewInt64Path(q, "TABLE_ID")
	q.pos = path.NewIntPath(q, "POS")
	q.basePos = path.NewIntPath(q, "BASE_POS")
	return q
}

type QInnodbVirtual struct {
	_alias  string
	tableId path.Int64Path
	pos     path.IntPath
	basePos path.IntPath
}

// core.Table Functions

func (q QInnodbVirtual) GetColumns() []core.Column {
	return []core.Column{
		q.tableId,
		q.pos,
		q.basePos,
	}
}

func (q QInnodbVirtual) GetSQL(d core.Dialect, sql core.SQL) error {
	return path.ExpandTableWithDialect(d, q, sql)
}

func (q QInnodbVirtual) GetAlias() string {
	return q._alias
}

func (q QInnodbVirtual) GetName() string {
	return "INNODB_VIRTUAL"
}

func (q QInnodbVirtual) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QInnodbVirtual) TableId() path.Int64Path {
	return q.tableId
}

func (q QInnodbVirtual) Pos() path.IntPath {
	return q.pos
}

func (q QInnodbVirtual) BasePos() path.IntPath {
	return q.basePos
}
