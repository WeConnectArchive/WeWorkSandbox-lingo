// Code generated by Lingo for table information_schema.INNODB_SYS_COLUMNS - DO NOT EDIT

package qinnodbsyscolumns

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QInnodbSysColumns {
	return newQInnodbSysColumns(alias)
}

func New() QInnodbSysColumns {
	return newQInnodbSysColumns("")
}

func newQInnodbSysColumns(alias string) QInnodbSysColumns {
	q := QInnodbSysColumns{_alias: alias}
	q.tableId = path.NewInt64Path(q, "TABLE_ID")
	q.name = path.NewStringPath(q, "NAME")
	q.pos = path.NewInt64Path(q, "POS")
	q.mtype = path.NewIntPath(q, "MTYPE")
	q.prtype = path.NewIntPath(q, "PRTYPE")
	q.len = path.NewIntPath(q, "LEN")
	return q
}

type QInnodbSysColumns struct {
	_alias  string
	tableId path.Int64
	name    path.String
	pos     path.Int64
	mtype   path.Int
	prtype  path.Int
	len     path.Int
}

// core.Table Functions

func (q QInnodbSysColumns) GetColumns() []core.Column {
	return []core.Column{
		q.tableId,
		q.name,
		q.pos,
		q.mtype,
		q.prtype,
		q.len,
	}
}

func (q QInnodbSysColumns) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QInnodbSysColumns) GetAlias() string {
	return q._alias
}

func (q QInnodbSysColumns) GetName() string {
	return "INNODB_SYS_COLUMNS"
}

func (q QInnodbSysColumns) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QInnodbSysColumns) TableId() path.Int64 {
	return q.tableId
}

func (q QInnodbSysColumns) Name() path.String {
	return q.name
}

func (q QInnodbSysColumns) Pos() path.Int64 {
	return q.pos
}

func (q QInnodbSysColumns) Mtype() path.Int {
	return q.mtype
}

func (q QInnodbSysColumns) Prtype() path.Int {
	return q.prtype
}

func (q QInnodbSysColumns) Len() path.Int {
	return q.len
}
