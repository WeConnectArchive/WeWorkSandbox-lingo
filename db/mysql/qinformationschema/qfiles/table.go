// Code generated by Lingo for table information_schema.FILES - DO NOT EDIT

package qfiles

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QFiles {
	return newQFiles(alias)
}

func New() QFiles {
	return newQFiles("")
}

func newQFiles(alias string) QFiles {
	q := QFiles{_alias: alias}
	q.fileId = path.NewInt64Path(q, "FILE_ID")
	q.fileName = path.NewStringPath(q, "FILE_NAME")
	q.fileType = path.NewStringPath(q, "FILE_TYPE")
	q.tablespaceName = path.NewStringPath(q, "TABLESPACE_NAME")
	q.tableCatalog = path.NewStringPath(q, "TABLE_CATALOG")
	q.tableSchema = path.NewStringPath(q, "TABLE_SCHEMA")
	q.tableName = path.NewStringPath(q, "TABLE_NAME")
	q.logfileGroupName = path.NewStringPath(q, "LOGFILE_GROUP_NAME")
	q.logfileGroupNumber = path.NewInt64Path(q, "LOGFILE_GROUP_NUMBER")
	q.engine = path.NewStringPath(q, "ENGINE")
	q.fulltextKeys = path.NewStringPath(q, "FULLTEXT_KEYS")
	q.deletedRows = path.NewInt64Path(q, "DELETED_ROWS")
	q.updateCount = path.NewInt64Path(q, "UPDATE_COUNT")
	q.freeExtents = path.NewInt64Path(q, "FREE_EXTENTS")
	q.totalExtents = path.NewInt64Path(q, "TOTAL_EXTENTS")
	q.extentSize = path.NewInt64Path(q, "EXTENT_SIZE")
	q.initialSize = path.NewInt64Path(q, "INITIAL_SIZE")
	q.maximumSize = path.NewInt64Path(q, "MAXIMUM_SIZE")
	q.autoextendSize = path.NewInt64Path(q, "AUTOEXTEND_SIZE")
	q.creationTime = path.NewTimePath(q, "CREATION_TIME")
	q.lastUpdateTime = path.NewTimePath(q, "LAST_UPDATE_TIME")
	q.lastAccessTime = path.NewTimePath(q, "LAST_ACCESS_TIME")
	q.recoverTime = path.NewInt64Path(q, "RECOVER_TIME")
	q.transactionCounter = path.NewInt64Path(q, "TRANSACTION_COUNTER")
	q.version = path.NewInt64Path(q, "VERSION")
	q.rowFormat = path.NewStringPath(q, "ROW_FORMAT")
	q.tableRows = path.NewInt64Path(q, "TABLE_ROWS")
	q.avgRowLength = path.NewInt64Path(q, "AVG_ROW_LENGTH")
	q.dataLength = path.NewInt64Path(q, "DATA_LENGTH")
	q.maxDataLength = path.NewInt64Path(q, "MAX_DATA_LENGTH")
	q.indexLength = path.NewInt64Path(q, "INDEX_LENGTH")
	q.dataFree = path.NewInt64Path(q, "DATA_FREE")
	q.createTime = path.NewTimePath(q, "CREATE_TIME")
	q.updateTime = path.NewTimePath(q, "UPDATE_TIME")
	q.checkTime = path.NewTimePath(q, "CHECK_TIME")
	q.checksum = path.NewInt64Path(q, "CHECKSUM")
	q.status = path.NewStringPath(q, "STATUS")
	q.extra = path.NewStringPath(q, "EXTRA")
	return q
}

type QFiles struct {
	_alias             string
	fileId             path.Int64
	fileName           path.String
	fileType           path.String
	tablespaceName     path.String
	tableCatalog       path.String
	tableSchema        path.String
	tableName          path.String
	logfileGroupName   path.String
	logfileGroupNumber path.Int64
	engine             path.String
	fulltextKeys       path.String
	deletedRows        path.Int64
	updateCount        path.Int64
	freeExtents        path.Int64
	totalExtents       path.Int64
	extentSize         path.Int64
	initialSize        path.Int64
	maximumSize        path.Int64
	autoextendSize     path.Int64
	creationTime       path.Time
	lastUpdateTime     path.Time
	lastAccessTime     path.Time
	recoverTime        path.Int64
	transactionCounter path.Int64
	version            path.Int64
	rowFormat          path.String
	tableRows          path.Int64
	avgRowLength       path.Int64
	dataLength         path.Int64
	maxDataLength      path.Int64
	indexLength        path.Int64
	dataFree           path.Int64
	createTime         path.Time
	updateTime         path.Time
	checkTime          path.Time
	checksum           path.Int64
	status             path.String
	extra              path.String
}

// core.Table Functions

func (q QFiles) GetColumns() []core.Column {
	return []core.Column{
		q.fileId,
		q.fileName,
		q.fileType,
		q.tablespaceName,
		q.tableCatalog,
		q.tableSchema,
		q.tableName,
		q.logfileGroupName,
		q.logfileGroupNumber,
		q.engine,
		q.fulltextKeys,
		q.deletedRows,
		q.updateCount,
		q.freeExtents,
		q.totalExtents,
		q.extentSize,
		q.initialSize,
		q.maximumSize,
		q.autoextendSize,
		q.creationTime,
		q.lastUpdateTime,
		q.lastAccessTime,
		q.recoverTime,
		q.transactionCounter,
		q.version,
		q.rowFormat,
		q.tableRows,
		q.avgRowLength,
		q.dataLength,
		q.maxDataLength,
		q.indexLength,
		q.dataFree,
		q.createTime,
		q.updateTime,
		q.checkTime,
		q.checksum,
		q.status,
		q.extra,
	}
}

func (q QFiles) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QFiles) GetAlias() string {
	return q._alias
}

func (q QFiles) GetName() string {
	return "FILES"
}

func (q QFiles) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QFiles) FileId() path.Int64 {
	return q.fileId
}

func (q QFiles) FileName() path.String {
	return q.fileName
}

func (q QFiles) FileType() path.String {
	return q.fileType
}

func (q QFiles) TablespaceName() path.String {
	return q.tablespaceName
}

func (q QFiles) TableCatalog() path.String {
	return q.tableCatalog
}

func (q QFiles) TableSchema() path.String {
	return q.tableSchema
}

func (q QFiles) TableName() path.String {
	return q.tableName
}

func (q QFiles) LogfileGroupName() path.String {
	return q.logfileGroupName
}

func (q QFiles) LogfileGroupNumber() path.Int64 {
	return q.logfileGroupNumber
}

func (q QFiles) Engine() path.String {
	return q.engine
}

func (q QFiles) FulltextKeys() path.String {
	return q.fulltextKeys
}

func (q QFiles) DeletedRows() path.Int64 {
	return q.deletedRows
}

func (q QFiles) UpdateCount() path.Int64 {
	return q.updateCount
}

func (q QFiles) FreeExtents() path.Int64 {
	return q.freeExtents
}

func (q QFiles) TotalExtents() path.Int64 {
	return q.totalExtents
}

func (q QFiles) ExtentSize() path.Int64 {
	return q.extentSize
}

func (q QFiles) InitialSize() path.Int64 {
	return q.initialSize
}

func (q QFiles) MaximumSize() path.Int64 {
	return q.maximumSize
}

func (q QFiles) AutoextendSize() path.Int64 {
	return q.autoextendSize
}

func (q QFiles) CreationTime() path.Time {
	return q.creationTime
}

func (q QFiles) LastUpdateTime() path.Time {
	return q.lastUpdateTime
}

func (q QFiles) LastAccessTime() path.Time {
	return q.lastAccessTime
}

func (q QFiles) RecoverTime() path.Int64 {
	return q.recoverTime
}

func (q QFiles) TransactionCounter() path.Int64 {
	return q.transactionCounter
}

func (q QFiles) Version() path.Int64 {
	return q.version
}

func (q QFiles) RowFormat() path.String {
	return q.rowFormat
}

func (q QFiles) TableRows() path.Int64 {
	return q.tableRows
}

func (q QFiles) AvgRowLength() path.Int64 {
	return q.avgRowLength
}

func (q QFiles) DataLength() path.Int64 {
	return q.dataLength
}

func (q QFiles) MaxDataLength() path.Int64 {
	return q.maxDataLength
}

func (q QFiles) IndexLength() path.Int64 {
	return q.indexLength
}

func (q QFiles) DataFree() path.Int64 {
	return q.dataFree
}

func (q QFiles) CreateTime() path.Time {
	return q.createTime
}

func (q QFiles) UpdateTime() path.Time {
	return q.updateTime
}

func (q QFiles) CheckTime() path.Time {
	return q.checkTime
}

func (q QFiles) Checksum() path.Int64 {
	return q.checksum
}

func (q QFiles) Status() path.String {
	return q.status
}

func (q QFiles) Extra() path.String {
	return q.extra
}
