// Code generated by Lingo for table information_schema.PROCESSLIST - DO NOT EDIT

package qprocesslist

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QProcesslist {
	return newQProcesslist(alias)
}

func New() QProcesslist {
	return newQProcesslist("")
}

func newQProcesslist(alias string) QProcesslist {
	q := QProcesslist{_alias: alias}
	q.id = path.NewInt64Path(q, "ID")
	q.user = path.NewStringPath(q, "USER")
	q.host = path.NewStringPath(q, "HOST")
	q.db = path.NewStringPath(q, "DB")
	q.command = path.NewStringPath(q, "COMMAND")
	q.time = path.NewIntPath(q, "TIME")
	q.state = path.NewStringPath(q, "STATE")
	q.info = path.NewStringPath(q, "INFO")
	return q
}

type QProcesslist struct {
	_alias  string
	id      path.Int64Path
	user    path.StringPath
	host    path.StringPath
	db      path.StringPath
	command path.StringPath
	time    path.IntPath
	state   path.StringPath
	info    path.StringPath
}

// core.Table Functions

func (q QProcesslist) GetColumns() []core.Column {
	return []core.Column{
		q.id,
		q.user,
		q.host,
		q.db,
		q.command,
		q.time,
		q.state,
		q.info,
	}
}

func (q QProcesslist) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QProcesslist) GetAlias() string {
	return q._alias
}

func (q QProcesslist) GetName() string {
	return "PROCESSLIST"
}

func (q QProcesslist) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QProcesslist) Id() path.Int64Path {
	return q.id
}

func (q QProcesslist) User() path.StringPath {
	return q.user
}

func (q QProcesslist) Host() path.StringPath {
	return q.host
}

func (q QProcesslist) Db() path.StringPath {
	return q.db
}

func (q QProcesslist) Command() path.StringPath {
	return q.command
}

func (q QProcesslist) Time() path.IntPath {
	return q.time
}

func (q QProcesslist) State() path.StringPath {
	return q.state
}

func (q QProcesslist) Info() path.StringPath {
	return q.info
}
