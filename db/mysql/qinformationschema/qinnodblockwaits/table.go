// Code generated by Lingo for table information_schema.INNODB_LOCK_WAITS - DO NOT EDIT

package qinnodblockwaits

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QInnodbLockWaits {
	return newQInnodbLockWaits(alias)
}

func New() QInnodbLockWaits {
	return newQInnodbLockWaits("")
}

func newQInnodbLockWaits(alias string) QInnodbLockWaits {
	q := QInnodbLockWaits{_alias: alias}
	q.requestingTrxId = path.NewStringPath(q, "requesting_trx_id")
	q.requestedLockId = path.NewStringPath(q, "requested_lock_id")
	q.blockingTrxId = path.NewStringPath(q, "blocking_trx_id")
	q.blockingLockId = path.NewStringPath(q, "blocking_lock_id")
	return q
}

type QInnodbLockWaits struct {
	_alias          string
	requestingTrxId path.String
	requestedLockId path.String
	blockingTrxId   path.String
	blockingLockId  path.String
}

// core.Table Functions

func (q QInnodbLockWaits) GetColumns() []core.Column {
	return []core.Column{
		q.requestingTrxId,
		q.requestedLockId,
		q.blockingTrxId,
		q.blockingLockId,
	}
}

func (q QInnodbLockWaits) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QInnodbLockWaits) GetAlias() string {
	return q._alias
}

func (q QInnodbLockWaits) GetName() string {
	return "INNODB_LOCK_WAITS"
}

func (q QInnodbLockWaits) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QInnodbLockWaits) RequestingTrxId() path.String {
	return q.requestingTrxId
}

func (q QInnodbLockWaits) RequestedLockId() path.String {
	return q.requestedLockId
}

func (q QInnodbLockWaits) BlockingTrxId() path.String {
	return q.blockingTrxId
}

func (q QInnodbLockWaits) BlockingLockId() path.String {
	return q.blockingLockId
}
