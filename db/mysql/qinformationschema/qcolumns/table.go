// Code generated by Lingo for table information_schema.COLUMNS - DO NOT EDIT

package qcolumns

import (
	"github.com/weworksandbox/lingo/core"
	"github.com/weworksandbox/lingo/core/path"
)

func As(alias string) QColumns {
	return newQColumns(alias)
}

func New() QColumns {
	return newQColumns("")
}

func newQColumns(alias string) QColumns {
	q := QColumns{_alias: alias}
	q.tableCatalog = path.NewStringPath(q, "TABLE_CATALOG")
	q.tableSchema = path.NewStringPath(q, "TABLE_SCHEMA")
	q.tableName = path.NewStringPath(q, "TABLE_NAME")
	q.columnName = path.NewStringPath(q, "COLUMN_NAME")
	q.ordinalPosition = path.NewIntPath(q, "ORDINAL_POSITION")
	q.columnDefault = path.NewStringPath(q, "COLUMN_DEFAULT")
	q.isNullable = path.NewStringPath(q, "IS_NULLABLE")
	q.dataType = NewUnknownPathType(q, "DATA_TYPE")
	q.characterMaximumLength = path.NewInt64Path(q, "CHARACTER_MAXIMUM_LENGTH")
	q.characterOctetLength = path.NewInt64Path(q, "CHARACTER_OCTET_LENGTH")
	q.numericPrecision = path.NewIntPath(q, "NUMERIC_PRECISION")
	q.numericScale = path.NewIntPath(q, "NUMERIC_SCALE")
	q.datetimePrecision = path.NewIntPath(q, "DATETIME_PRECISION")
	q.characterSetName = path.NewStringPath(q, "CHARACTER_SET_NAME")
	q.collationName = path.NewStringPath(q, "COLLATION_NAME")
	q.columnType = path.NewStringPath(q, "COLUMN_TYPE")
	q.columnKey = NewUnknownPathType(q, "COLUMN_KEY")
	q.extra = path.NewStringPath(q, "EXTRA")
	q.privileges = path.NewStringPath(q, "PRIVILEGES")
	q.columnComment = path.NewStringPath(q, "COLUMN_COMMENT")
	q.generationExpression = path.NewStringPath(q, "GENERATION_EXPRESSION")
	q.srsId = path.NewIntPath(q, "SRS_ID")
	return q
}

type QColumns struct {
	_alias                 string
	tableCatalog           path.StringPath
	tableSchema            path.StringPath
	tableName              path.StringPath
	columnName             path.StringPath
	ordinalPosition        path.IntPath
	columnDefault          path.StringPath
	isNullable             path.StringPath
	dataType               UnknownPathType
	characterMaximumLength path.Int64Path
	characterOctetLength   path.Int64Path
	numericPrecision       path.IntPath
	numericScale           path.IntPath
	datetimePrecision      path.IntPath
	characterSetName       path.StringPath
	collationName          path.StringPath
	columnType             path.StringPath
	columnKey              UnknownPathType
	extra                  path.StringPath
	privileges             path.StringPath
	columnComment          path.StringPath
	generationExpression   path.StringPath
	srsId                  path.IntPath
}

// core.Table Functions

func (q QColumns) GetColumns() []core.Column {
	return []core.Column{
		q.tableCatalog,
		q.tableSchema,
		q.tableName,
		q.columnName,
		q.ordinalPosition,
		q.columnDefault,
		q.isNullable,
		q.dataType,
		q.characterMaximumLength,
		q.characterOctetLength,
		q.numericPrecision,
		q.numericScale,
		q.datetimePrecision,
		q.characterSetName,
		q.collationName,
		q.columnType,
		q.columnKey,
		q.extra,
		q.privileges,
		q.columnComment,
		q.generationExpression,
		q.srsId,
	}
}

func (q QColumns) GetSQL(d core.Dialect, sql core.SQL) error {
	return path.ExpandTableWithDialect(d, q, sql)
}

func (q QColumns) GetAlias() string {
	return q._alias
}

func (q QColumns) GetName() string {
	return "COLUMNS"
}

func (q QColumns) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QColumns) TableCatalog() path.StringPath {
	return q.tableCatalog
}

func (q QColumns) TableSchema() path.StringPath {
	return q.tableSchema
}

func (q QColumns) TableName() path.StringPath {
	return q.tableName
}

func (q QColumns) ColumnName() path.StringPath {
	return q.columnName
}

func (q QColumns) OrdinalPosition() path.IntPath {
	return q.ordinalPosition
}

func (q QColumns) ColumnDefault() path.StringPath {
	return q.columnDefault
}

func (q QColumns) IsNullable() path.StringPath {
	return q.isNullable
}

func (q QColumns) DataType() UnknownPathType {
	return q.dataType
}

func (q QColumns) CharacterMaximumLength() path.Int64Path {
	return q.characterMaximumLength
}

func (q QColumns) CharacterOctetLength() path.Int64Path {
	return q.characterOctetLength
}

func (q QColumns) NumericPrecision() path.IntPath {
	return q.numericPrecision
}

func (q QColumns) NumericScale() path.IntPath {
	return q.numericScale
}

func (q QColumns) DatetimePrecision() path.IntPath {
	return q.datetimePrecision
}

func (q QColumns) CharacterSetName() path.StringPath {
	return q.characterSetName
}

func (q QColumns) CollationName() path.StringPath {
	return q.collationName
}

func (q QColumns) ColumnType() path.StringPath {
	return q.columnType
}

func (q QColumns) ColumnKey() UnknownPathType {
	return q.columnKey
}

func (q QColumns) Extra() path.StringPath {
	return q.extra
}

func (q QColumns) Privileges() path.StringPath {
	return q.privileges
}

func (q QColumns) ColumnComment() path.StringPath {
	return q.columnComment
}

func (q QColumns) GenerationExpression() path.StringPath {
	return q.generationExpression
}

func (q QColumns) SrsId() path.IntPath {
	return q.srsId
}
