// Code generated by Lingo for table information_schema.INNODB_TABLESPACES_BRIEF - DO NOT EDIT

package qinnodbtablespacesbrief

import (
	"github.com/weworksandbox/lingo/core"
	"github.com/weworksandbox/lingo/core/path"
)

func As(alias string) QInnodbTablespacesBrief {
	return newQInnodbTablespacesBrief(alias)
}

func New() QInnodbTablespacesBrief {
	return newQInnodbTablespacesBrief("")
}

func newQInnodbTablespacesBrief(alias string) QInnodbTablespacesBrief {
	q := QInnodbTablespacesBrief{_alias: alias}
	q.space = NewUnknownPathType(q, "SPACE")
	q.name = path.NewStringPath(q, "NAME")
	q.path = path.NewStringPath(q, "PATH")
	q.flag = NewUnknownPathType(q, "FLAG")
	q.spaceType = path.NewStringPath(q, "SPACE_TYPE")
	return q
}

type QInnodbTablespacesBrief struct {
	_alias    string
	space     UnknownPathType
	name      path.StringPath
	path      path.StringPath
	flag      UnknownPathType
	spaceType path.StringPath
}

// core.Table Functions

func (q QInnodbTablespacesBrief) GetColumns() []core.Column {
	return []core.Column{
		q.space,
		q.name,
		q.path,
		q.flag,
		q.spaceType,
	}
}

func (q QInnodbTablespacesBrief) GetSQL(d core.Dialect, sql core.SQL) error {
	return path.ExpandTableWithDialect(d, q, sql)
}

func (q QInnodbTablespacesBrief) GetAlias() string {
	return q._alias
}

func (q QInnodbTablespacesBrief) GetName() string {
	return "INNODB_TABLESPACES_BRIEF"
}

func (q QInnodbTablespacesBrief) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QInnodbTablespacesBrief) Space() UnknownPathType {
	return q.space
}

func (q QInnodbTablespacesBrief) Name() path.StringPath {
	return q.name
}

func (q QInnodbTablespacesBrief) Path() path.StringPath {
	return q.path
}

func (q QInnodbTablespacesBrief) Flag() UnknownPathType {
	return q.flag
}

func (q QInnodbTablespacesBrief) SpaceType() path.StringPath {
	return q.spaceType
}
