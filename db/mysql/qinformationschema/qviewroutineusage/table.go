// Code generated by Lingo for table information_schema.VIEW_ROUTINE_USAGE - DO NOT EDIT

package qviewroutineusage

import (
	"github.com/weworksandbox/lingo/core"
	"github.com/weworksandbox/lingo/core/path"
)

func As(alias string) QViewRoutineUsage {
	return newQViewRoutineUsage(alias)
}

func New() QViewRoutineUsage {
	return newQViewRoutineUsage("")
}

func newQViewRoutineUsage(alias string) QViewRoutineUsage {
	q := QViewRoutineUsage{_alias: alias}
	q.tableCatalog = path.NewStringPath(q, "TABLE_CATALOG")
	q.tableSchema = path.NewStringPath(q, "TABLE_SCHEMA")
	q.tableName = path.NewStringPath(q, "TABLE_NAME")
	q.specificCatalog = path.NewStringPath(q, "SPECIFIC_CATALOG")
	q.specificSchema = path.NewStringPath(q, "SPECIFIC_SCHEMA")
	q.specificName = path.NewStringPath(q, "SPECIFIC_NAME")
	return q
}

type QViewRoutineUsage struct {
	_alias          string
	tableCatalog    path.StringPath
	tableSchema     path.StringPath
	tableName       path.StringPath
	specificCatalog path.StringPath
	specificSchema  path.StringPath
	specificName    path.StringPath
}

// core.Table Functions

func (q QViewRoutineUsage) GetColumns() []core.Column {
	return []core.Column{
		q.tableCatalog,
		q.tableSchema,
		q.tableName,
		q.specificCatalog,
		q.specificSchema,
		q.specificName,
	}
}

func (q QViewRoutineUsage) GetSQL(d core.Dialect, sql core.SQL) error {
	return path.ExpandTableWithDialect(d, q, sql)
}

func (q QViewRoutineUsage) GetAlias() string {
	return q._alias
}

func (q QViewRoutineUsage) GetName() string {
	return "VIEW_ROUTINE_USAGE"
}

func (q QViewRoutineUsage) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QViewRoutineUsage) TableCatalog() path.StringPath {
	return q.tableCatalog
}

func (q QViewRoutineUsage) TableSchema() path.StringPath {
	return q.tableSchema
}

func (q QViewRoutineUsage) TableName() path.StringPath {
	return q.tableName
}

func (q QViewRoutineUsage) SpecificCatalog() path.StringPath {
	return q.specificCatalog
}

func (q QViewRoutineUsage) SpecificSchema() path.StringPath {
	return q.specificSchema
}

func (q QViewRoutineUsage) SpecificName() path.StringPath {
	return q.specificName
}
