// Code generated by Lingo for table information_schema.PLUGINS - DO NOT EDIT

package qplugins

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QPlugins {
	return newQPlugins(alias)
}

func New() QPlugins {
	return newQPlugins("")
}

func newQPlugins(alias string) QPlugins {
	q := QPlugins{_alias: alias}
	q.pluginName = path.NewStringPath(q, "PLUGIN_NAME")
	q.pluginVersion = path.NewStringPath(q, "PLUGIN_VERSION")
	q.pluginStatus = path.NewStringPath(q, "PLUGIN_STATUS")
	q.pluginType = path.NewStringPath(q, "PLUGIN_TYPE")
	q.pluginTypeVersion = path.NewStringPath(q, "PLUGIN_TYPE_VERSION")
	q.pluginLibrary = path.NewStringPath(q, "PLUGIN_LIBRARY")
	q.pluginLibraryVersion = path.NewStringPath(q, "PLUGIN_LIBRARY_VERSION")
	q.pluginAuthor = path.NewStringPath(q, "PLUGIN_AUTHOR")
	q.pluginDescription = path.NewStringPath(q, "PLUGIN_DESCRIPTION")
	q.pluginLicense = path.NewStringPath(q, "PLUGIN_LICENSE")
	q.loadOption = path.NewStringPath(q, "LOAD_OPTION")
	return q
}

type QPlugins struct {
	_alias               string
	pluginName           path.StringPath
	pluginVersion        path.StringPath
	pluginStatus         path.StringPath
	pluginType           path.StringPath
	pluginTypeVersion    path.StringPath
	pluginLibrary        path.StringPath
	pluginLibraryVersion path.StringPath
	pluginAuthor         path.StringPath
	pluginDescription    path.StringPath
	pluginLicense        path.StringPath
	loadOption           path.StringPath
}

// core.Table Functions

func (q QPlugins) GetColumns() []core.Column {
	return []core.Column{
		q.pluginName,
		q.pluginVersion,
		q.pluginStatus,
		q.pluginType,
		q.pluginTypeVersion,
		q.pluginLibrary,
		q.pluginLibraryVersion,
		q.pluginAuthor,
		q.pluginDescription,
		q.pluginLicense,
		q.loadOption,
	}
}

func (q QPlugins) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QPlugins) GetAlias() string {
	return q._alias
}

func (q QPlugins) GetName() string {
	return "PLUGINS"
}

func (q QPlugins) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QPlugins) PluginName() path.StringPath {
	return q.pluginName
}

func (q QPlugins) PluginVersion() path.StringPath {
	return q.pluginVersion
}

func (q QPlugins) PluginStatus() path.StringPath {
	return q.pluginStatus
}

func (q QPlugins) PluginType() path.StringPath {
	return q.pluginType
}

func (q QPlugins) PluginTypeVersion() path.StringPath {
	return q.pluginTypeVersion
}

func (q QPlugins) PluginLibrary() path.StringPath {
	return q.pluginLibrary
}

func (q QPlugins) PluginLibraryVersion() path.StringPath {
	return q.pluginLibraryVersion
}

func (q QPlugins) PluginAuthor() path.StringPath {
	return q.pluginAuthor
}

func (q QPlugins) PluginDescription() path.StringPath {
	return q.pluginDescription
}

func (q QPlugins) PluginLicense() path.StringPath {
	return q.pluginLicense
}

func (q QPlugins) LoadOption() path.StringPath {
	return q.loadOption
}
