// Code generated by Lingo for table information_schema.TABLE_CONSTRAINTS - DO NOT EDIT

package qtableconstraints

import (
	"github.com/weworksandbox/lingo/core"
	"github.com/weworksandbox/lingo/core/path"
)

func As(alias string) QTableConstraints {
	return newQTableConstraints(alias)
}

func New() QTableConstraints {
	return newQTableConstraints("")
}

func newQTableConstraints(alias string) QTableConstraints {
	q := QTableConstraints{_alias: alias}
	q.constraintCatalog = path.NewStringPath(q, "CONSTRAINT_CATALOG")
	q.constraintSchema = path.NewStringPath(q, "CONSTRAINT_SCHEMA")
	q.constraintName = path.NewStringPath(q, "CONSTRAINT_NAME")
	q.tableSchema = path.NewStringPath(q, "TABLE_SCHEMA")
	q.tableName = path.NewStringPath(q, "TABLE_NAME")
	q.constraintType = path.NewStringPath(q, "CONSTRAINT_TYPE")
	return q
}

type QTableConstraints struct {
	_alias            string
	constraintCatalog path.StringPath
	constraintSchema  path.StringPath
	constraintName    path.StringPath
	tableSchema       path.StringPath
	tableName         path.StringPath
	constraintType    path.StringPath
}

// core.Table Functions

func (q QTableConstraints) GetColumns() []core.Column {
	return []core.Column{
		q.constraintCatalog,
		q.constraintSchema,
		q.constraintName,
		q.tableSchema,
		q.tableName,
		q.constraintType,
	}
}

func (q QTableConstraints) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QTableConstraints) GetAlias() string {
	return q._alias
}

func (q QTableConstraints) GetName() string {
	return "TABLE_CONSTRAINTS"
}

func (q QTableConstraints) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QTableConstraints) ConstraintCatalog() path.StringPath {
	return q.constraintCatalog
}

func (q QTableConstraints) ConstraintSchema() path.StringPath {
	return q.constraintSchema
}

func (q QTableConstraints) ConstraintName() path.StringPath {
	return q.constraintName
}

func (q QTableConstraints) TableSchema() path.StringPath {
	return q.tableSchema
}

func (q QTableConstraints) TableName() path.StringPath {
	return q.tableName
}

func (q QTableConstraints) ConstraintType() path.StringPath {
	return q.constraintType
}
