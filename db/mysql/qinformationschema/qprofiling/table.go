// Code generated by Lingo for table information_schema.PROFILING - DO NOT EDIT

package qprofiling

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QProfiling {
	return newQProfiling(alias)
}

func New() QProfiling {
	return newQProfiling("")
}

func newQProfiling(alias string) QProfiling {
	q := QProfiling{_alias: alias}
	q.queryId = path.NewIntPath(q, "QUERY_ID")
	q.seq = path.NewIntPath(q, "SEQ")
	q.state = path.NewStringPath(q, "STATE")
	q.duration = path.NewBinaryPath(q, "DURATION")
	q.cpuUser = path.NewBinaryPath(q, "CPU_USER")
	q.cpuSystem = path.NewBinaryPath(q, "CPU_SYSTEM")
	q.contextVoluntary = path.NewIntPath(q, "CONTEXT_VOLUNTARY")
	q.contextInvoluntary = path.NewIntPath(q, "CONTEXT_INVOLUNTARY")
	q.blockOpsIn = path.NewIntPath(q, "BLOCK_OPS_IN")
	q.blockOpsOut = path.NewIntPath(q, "BLOCK_OPS_OUT")
	q.messagesSent = path.NewIntPath(q, "MESSAGES_SENT")
	q.messagesReceived = path.NewIntPath(q, "MESSAGES_RECEIVED")
	q.pageFaultsMajor = path.NewIntPath(q, "PAGE_FAULTS_MAJOR")
	q.pageFaultsMinor = path.NewIntPath(q, "PAGE_FAULTS_MINOR")
	q.swaps = path.NewIntPath(q, "SWAPS")
	q.sourceFunction = path.NewStringPath(q, "SOURCE_FUNCTION")
	q.sourceFile = path.NewStringPath(q, "SOURCE_FILE")
	q.sourceLine = path.NewIntPath(q, "SOURCE_LINE")
	return q
}

type QProfiling struct {
	_alias             string
	queryId            path.Int
	seq                path.Int
	state              path.String
	duration           path.Binary
	cpuUser            path.Binary
	cpuSystem          path.Binary
	contextVoluntary   path.Int
	contextInvoluntary path.Int
	blockOpsIn         path.Int
	blockOpsOut        path.Int
	messagesSent       path.Int
	messagesReceived   path.Int
	pageFaultsMajor    path.Int
	pageFaultsMinor    path.Int
	swaps              path.Int
	sourceFunction     path.String
	sourceFile         path.String
	sourceLine         path.Int
}

// core.Table Functions

func (q QProfiling) GetColumns() []core.Column {
	return []core.Column{
		q.queryId,
		q.seq,
		q.state,
		q.duration,
		q.cpuUser,
		q.cpuSystem,
		q.contextVoluntary,
		q.contextInvoluntary,
		q.blockOpsIn,
		q.blockOpsOut,
		q.messagesSent,
		q.messagesReceived,
		q.pageFaultsMajor,
		q.pageFaultsMinor,
		q.swaps,
		q.sourceFunction,
		q.sourceFile,
		q.sourceLine,
	}
}

func (q QProfiling) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QProfiling) GetAlias() string {
	return q._alias
}

func (q QProfiling) GetName() string {
	return "PROFILING"
}

func (q QProfiling) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QProfiling) QueryId() path.Int {
	return q.queryId
}

func (q QProfiling) Seq() path.Int {
	return q.seq
}

func (q QProfiling) State() path.String {
	return q.state
}

func (q QProfiling) Duration() path.Binary {
	return q.duration
}

func (q QProfiling) CpuUser() path.Binary {
	return q.cpuUser
}

func (q QProfiling) CpuSystem() path.Binary {
	return q.cpuSystem
}

func (q QProfiling) ContextVoluntary() path.Int {
	return q.contextVoluntary
}

func (q QProfiling) ContextInvoluntary() path.Int {
	return q.contextInvoluntary
}

func (q QProfiling) BlockOpsIn() path.Int {
	return q.blockOpsIn
}

func (q QProfiling) BlockOpsOut() path.Int {
	return q.blockOpsOut
}

func (q QProfiling) MessagesSent() path.Int {
	return q.messagesSent
}

func (q QProfiling) MessagesReceived() path.Int {
	return q.messagesReceived
}

func (q QProfiling) PageFaultsMajor() path.Int {
	return q.pageFaultsMajor
}

func (q QProfiling) PageFaultsMinor() path.Int {
	return q.pageFaultsMinor
}

func (q QProfiling) Swaps() path.Int {
	return q.swaps
}

func (q QProfiling) SourceFunction() path.String {
	return q.sourceFunction
}

func (q QProfiling) SourceFile() path.String {
	return q.sourceFile
}

func (q QProfiling) SourceLine() path.Int {
	return q.sourceLine
}
