// Code generated by Lingo for table information_schema.PARAMETERS - DO NOT EDIT

package qparameters

import (
	"github.com/weworksandbox/lingo/core"
	"github.com/weworksandbox/lingo/core/path"
)

func As(alias string) QParameters {
	return newQParameters(alias)
}

func New() QParameters {
	return newQParameters("")
}

func newQParameters(alias string) QParameters {
	q := QParameters{_alias: alias}
	q.specificCatalog = path.NewStringPath(q, "SPECIFIC_CATALOG")
	q.specificSchema = path.NewStringPath(q, "SPECIFIC_SCHEMA")
	q.specificName = path.NewStringPath(q, "SPECIFIC_NAME")
	q.ordinalPosition = path.NewInt64Path(q, "ORDINAL_POSITION")
	q.parameterMode = NewUnknownPathType(q, "PARAMETER_MODE")
	q.parameterName = path.NewStringPath(q, "PARAMETER_NAME")
	q.dataType = NewUnknownPathType(q, "DATA_TYPE")
	q.characterMaximumLength = path.NewInt64Path(q, "CHARACTER_MAXIMUM_LENGTH")
	q.characterOctetLength = path.NewInt64Path(q, "CHARACTER_OCTET_LENGTH")
	q.numericPrecision = path.NewIntPath(q, "NUMERIC_PRECISION")
	q.numericScale = path.NewInt64Path(q, "NUMERIC_SCALE")
	q.datetimePrecision = path.NewIntPath(q, "DATETIME_PRECISION")
	q.characterSetName = path.NewStringPath(q, "CHARACTER_SET_NAME")
	q.collationName = path.NewStringPath(q, "COLLATION_NAME")
	q.dtdIdentifier = path.NewStringPath(q, "DTD_IDENTIFIER")
	q.routineType = NewUnknownPathType(q, "ROUTINE_TYPE")
	return q
}

type QParameters struct {
	_alias                 string
	specificCatalog        path.StringPath
	specificSchema         path.StringPath
	specificName           path.StringPath
	ordinalPosition        path.Int64Path
	parameterMode          UnknownPathType
	parameterName          path.StringPath
	dataType               UnknownPathType
	characterMaximumLength path.Int64Path
	characterOctetLength   path.Int64Path
	numericPrecision       path.IntPath
	numericScale           path.Int64Path
	datetimePrecision      path.IntPath
	characterSetName       path.StringPath
	collationName          path.StringPath
	dtdIdentifier          path.StringPath
	routineType            UnknownPathType
}

// core.Table Functions

func (q QParameters) GetColumns() []core.Column {
	return []core.Column{
		q.specificCatalog,
		q.specificSchema,
		q.specificName,
		q.ordinalPosition,
		q.parameterMode,
		q.parameterName,
		q.dataType,
		q.characterMaximumLength,
		q.characterOctetLength,
		q.numericPrecision,
		q.numericScale,
		q.datetimePrecision,
		q.characterSetName,
		q.collationName,
		q.dtdIdentifier,
		q.routineType,
	}
}

func (q QParameters) GetSQL(d core.Dialect, sql core.SQL) error {
	return path.ExpandTableWithDialect(d, q, sql)
}

func (q QParameters) GetAlias() string {
	return q._alias
}

func (q QParameters) GetName() string {
	return "PARAMETERS"
}

func (q QParameters) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QParameters) SpecificCatalog() path.StringPath {
	return q.specificCatalog
}

func (q QParameters) SpecificSchema() path.StringPath {
	return q.specificSchema
}

func (q QParameters) SpecificName() path.StringPath {
	return q.specificName
}

func (q QParameters) OrdinalPosition() path.Int64Path {
	return q.ordinalPosition
}

func (q QParameters) ParameterMode() UnknownPathType {
	return q.parameterMode
}

func (q QParameters) ParameterName() path.StringPath {
	return q.parameterName
}

func (q QParameters) DataType() UnknownPathType {
	return q.dataType
}

func (q QParameters) CharacterMaximumLength() path.Int64Path {
	return q.characterMaximumLength
}

func (q QParameters) CharacterOctetLength() path.Int64Path {
	return q.characterOctetLength
}

func (q QParameters) NumericPrecision() path.IntPath {
	return q.numericPrecision
}

func (q QParameters) NumericScale() path.Int64Path {
	return q.numericScale
}

func (q QParameters) DatetimePrecision() path.IntPath {
	return q.datetimePrecision
}

func (q QParameters) CharacterSetName() path.StringPath {
	return q.characterSetName
}

func (q QParameters) CollationName() path.StringPath {
	return q.collationName
}

func (q QParameters) DtdIdentifier() path.StringPath {
	return q.dtdIdentifier
}

func (q QParameters) RoutineType() UnknownPathType {
	return q.routineType
}
