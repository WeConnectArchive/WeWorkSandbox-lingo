// Code generated by Lingo for table information_schema.OPTIMIZER_TRACE - DO NOT EDIT

package qoptimizertrace

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QOptimizerTrace {
	return newQOptimizerTrace(alias)
}

func New() QOptimizerTrace {
	return newQOptimizerTrace("")
}

func newQOptimizerTrace(alias string) QOptimizerTrace {
	q := QOptimizerTrace{_alias: alias}
	q.query = path.NewStringPath(q, "QUERY")
	q.trace = path.NewStringPath(q, "TRACE")
	q.missingBytesBeyondMaxMemSize = path.NewIntPath(q, "MISSING_BYTES_BEYOND_MAX_MEM_SIZE")
	q.insufficientPrivileges = path.NewBoolPath(q, "INSUFFICIENT_PRIVILEGES")
	return q
}

type QOptimizerTrace struct {
	_alias                       string
	query                        path.StringPath
	trace                        path.StringPath
	missingBytesBeyondMaxMemSize path.IntPath
	insufficientPrivileges       path.BoolPath
}

// core.Table Functions

func (q QOptimizerTrace) GetColumns() []core.Column {
	return []core.Column{
		q.query,
		q.trace,
		q.missingBytesBeyondMaxMemSize,
		q.insufficientPrivileges,
	}
}

func (q QOptimizerTrace) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QOptimizerTrace) GetAlias() string {
	return q._alias
}

func (q QOptimizerTrace) GetName() string {
	return "OPTIMIZER_TRACE"
}

func (q QOptimizerTrace) GetParent() string {
	return "information_schema"
}

// Column Functions

func (q QOptimizerTrace) Query() path.StringPath {
	return q.query
}

func (q QOptimizerTrace) Trace() path.StringPath {
	return q.trace
}

func (q QOptimizerTrace) MissingBytesBeyondMaxMemSize() path.IntPath {
	return q.missingBytesBeyondMaxMemSize
}

func (q QOptimizerTrace) InsufficientPrivileges() path.BoolPath {
	return q.insufficientPrivileges
}
