// Code generated by Lingo for table sakila.film_list - DO NOT EDIT

// +build !nolingo

package tfilmlist

import (
	"github.com/weworksandbox/lingo"
	"github.com/weworksandbox/lingo/expr/path"
	"github.com/weworksandbox/lingo/sql"
)

func As(alias string) TFilmList {
	return newTFilmList(alias)
}

func New() TFilmList {
	return newTFilmList("")
}

func newTFilmList(alias string) TFilmList {
	t := TFilmList{
		_alias: alias,
	}
	t.fID = path.NewInt16(t, "FID")
	t.title = path.NewString(t, "title")
	t.description = path.NewString(t, "description")
	t.category = path.NewString(t, "category")
	t.price = path.NewBinary(t, "price")
	t.length = path.NewInt16(t, "length")
	t.rating = path.NewString(t, "rating")
	t.actors = path.NewString(t, "actors")
	return t
}

type TFilmList struct {
	_alias string

	fID         path.Int16
	title       path.String
	description path.String
	category    path.String
	price       path.Binary
	length      path.Int16
	rating      path.String
	actors      path.String
}

// lingo.Table Functions

func (t TFilmList) GetColumns() []lingo.Column {
	return []lingo.Column{
		t.fID,
		t.title,
		t.description,
		t.category,
		t.price,
		t.length,
		t.rating,
		t.actors,
	}
}

func (t TFilmList) ToSQL(d lingo.Dialect) (sql.Data, error) {
	return path.ExpandTableWithDialect(d, t)
}

func (t TFilmList) GetAlias() string {
	return t._alias
}

func (t TFilmList) GetName() string {
	return "film_list"
}

func (t TFilmList) GetParent() string {
	return "sakila"
}

// Column Functions

func (t TFilmList) FID() path.Int16 {
	return t.fID
}

func (t TFilmList) Title() path.String {
	return t.title
}

func (t TFilmList) Description() path.String {
	return t.description
}

func (t TFilmList) Category() path.String {
	return t.category
}

func (t TFilmList) Price() path.Binary {
	return t.price
}

func (t TFilmList) Length() path.Int16 {
	return t.length
}

func (t TFilmList) Rating() path.String {
	return t.rating
}

func (t TFilmList) Actors() path.String {
	return t.actors
}
