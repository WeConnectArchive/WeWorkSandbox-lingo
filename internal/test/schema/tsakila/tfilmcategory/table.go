// Code generated by Lingo for table sakila.film_category - DO NOT EDIT

// +build !nolingo

package tfilmcategory

import (
	"github.com/weworksandbox/lingo"
	"github.com/weworksandbox/lingo/expr/path"
	"github.com/weworksandbox/lingo/sql"
)

func As(alias string) TFilmCategory {
	return newTFilmCategory(alias)
}

func New() TFilmCategory {
	return newTFilmCategory("")
}

func newTFilmCategory(alias string) TFilmCategory {
	t := TFilmCategory{
		_alias: alias,
	}
	t.filmId = path.NewInt16(t, "film_id")
	t.categoryId = path.NewInt8(t, "category_id")
	t.lastUpdate = path.NewTime(t, "last_update")
	return t
}

type TFilmCategory struct {
	_alias string

	filmId     path.Int16
	categoryId path.Int8
	lastUpdate path.Time
}

// lingo.Table Functions

func (t TFilmCategory) GetColumns() []lingo.Column {
	return []lingo.Column{
		t.filmId,
		t.categoryId,
		t.lastUpdate,
	}
}

func (t TFilmCategory) ToSQL(d lingo.Dialect) (sql.Data, error) {
	return path.ExpandTableWithDialect(d, t)
}

func (t TFilmCategory) GetAlias() string {
	return t._alias
}

func (t TFilmCategory) GetName() string {
	return "film_category"
}

func (t TFilmCategory) GetParent() string {
	return "sakila"
}

// Column Functions

func (t TFilmCategory) FilmId() path.Int16 {
	return t.filmId
}

func (t TFilmCategory) CategoryId() path.Int8 {
	return t.categoryId
}

func (t TFilmCategory) LastUpdate() path.Time {
	return t.lastUpdate
}
