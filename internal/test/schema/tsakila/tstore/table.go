// Code generated by Lingo for table sakila.store - DO NOT EDIT

// +build !nolingo

package tstore

import (
	"github.com/weworksandbox/lingo"
	"github.com/weworksandbox/lingo/expr/path"
	"github.com/weworksandbox/lingo/sql"
)

func As(alias string) TStore {
	return newTStore(alias)
}

func New() TStore {
	return newTStore("")
}

func newTStore(alias string) TStore {
	t := TStore{
		_alias: alias,
	}
	t.storeId = path.NewInt8(t, "store_id")
	t.managerStaffId = path.NewInt8(t, "manager_staff_id")
	t.addressId = path.NewInt16(t, "address_id")
	t.lastUpdate = path.NewTime(t, "last_update")
	return t
}

type TStore struct {
	_alias string

	storeId        path.Int8
	managerStaffId path.Int8
	addressId      path.Int16
	lastUpdate     path.Time
}

// lingo.Table Functions

func (t TStore) GetColumns() []lingo.Column {
	return []lingo.Column{
		t.storeId,
		t.managerStaffId,
		t.addressId,
		t.lastUpdate,
	}
}

func (t TStore) ToSQL(d lingo.Dialect) (sql.Data, error) {
	return path.ExpandTableWithDialect(d, t)
}

func (t TStore) GetAlias() string {
	return t._alias
}

func (t TStore) GetName() string {
	return "store"
}

func (t TStore) GetParent() string {
	return "sakila"
}

// Column Functions

func (t TStore) StoreId() path.Int8 {
	return t.storeId
}

func (t TStore) ManagerStaffId() path.Int8 {
	return t.managerStaffId
}

func (t TStore) AddressId() path.Int16 {
	return t.addressId
}

func (t TStore) LastUpdate() path.Time {
	return t.lastUpdate
}
