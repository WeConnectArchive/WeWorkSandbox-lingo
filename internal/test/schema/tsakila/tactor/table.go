// Code generated by Lingo for table sakila.actor - DO NOT EDIT

// +build !nolingo

package tactor

import (
	"github.com/weworksandbox/lingo"
	"github.com/weworksandbox/lingo/expr/path"
	"github.com/weworksandbox/lingo/sql"
)

func As(alias string) TActor {
	return newTActor(alias)
}

func New() TActor {
	return newTActor("")
}

func newTActor(alias string) TActor {
	t := TActor{
		_alias: alias,
	}
	t.actorId = path.NewInt16(t, "actor_id")
	t.firstName = path.NewString(t, "first_name")
	t.lastName = path.NewString(t, "last_name")
	t.lastUpdate = path.NewTime(t, "last_update")
	return t
}

type TActor struct {
	_alias string

	actorId    path.Int16
	firstName  path.String
	lastName   path.String
	lastUpdate path.Time
}

// lingo.Table Functions

func (t TActor) GetColumns() []lingo.Column {
	return []lingo.Column{
		t.actorId,
		t.firstName,
		t.lastName,
		t.lastUpdate,
	}
}

func (t TActor) ToSQL(d lingo.Dialect) (sql.Data, error) {
	return path.ExpandTableWithDialect(d, t)
}

func (t TActor) GetAlias() string {
	return t._alias
}

func (t TActor) GetName() string {
	return "actor"
}

func (t TActor) GetParent() string {
	return "sakila"
}

// Column Functions

func (t TActor) ActorId() path.Int16 {
	return t.actorId
}

func (t TActor) FirstName() path.String {
	return t.firstName
}

func (t TActor) LastName() path.String {
	return t.lastName
}

func (t TActor) LastUpdate() path.Time {
	return t.lastUpdate
}
