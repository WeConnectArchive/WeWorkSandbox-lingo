// Code generated by Lingo for table sakila.sales_by_store - DO NOT EDIT

// +build !nolingo

package tsalesbystore

import (
	"github.com/weworksandbox/lingo"
	"github.com/weworksandbox/lingo/expr/path"
	"github.com/weworksandbox/lingo/sql"
)

func As(alias string) TSalesByStore {
	return newTSalesByStore(alias)
}

func New() TSalesByStore {
	return newTSalesByStore("")
}

func newTSalesByStore(alias string) TSalesByStore {
	t := TSalesByStore{
		_alias: alias,
	}
	t.store = path.NewString(t, "store")
	t.manager = path.NewString(t, "manager")
	t.totalSales = path.NewBinary(t, "total_sales")
	return t
}

type TSalesByStore struct {
	_alias string

	store      path.String
	manager    path.String
	totalSales path.Binary
}

// lingo.Table Functions

func (t TSalesByStore) GetColumns() []lingo.Column {
	return []lingo.Column{
		t.store,
		t.manager,
		t.totalSales,
	}
}

func (t TSalesByStore) ToSQL(d lingo.Dialect) (sql.Data, error) {
	return path.ExpandTableWithDialect(d, t)
}

func (t TSalesByStore) GetAlias() string {
	return t._alias
}

func (t TSalesByStore) GetName() string {
	return "sales_by_store"
}

func (t TSalesByStore) GetParent() string {
	return "sakila"
}

// Column Functions

func (t TSalesByStore) Store() path.String {
	return t.store
}

func (t TSalesByStore) Manager() path.String {
	return t.manager
}

func (t TSalesByStore) TotalSales() path.Binary {
	return t.totalSales
}
