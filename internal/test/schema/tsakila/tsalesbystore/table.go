// Code generated by Lingo for table sakila.sales_by_store - DO NOT EDIT

// +build !nolingo

package tsalesbystore

import (
	"github.com/weworksandbox/lingo"
	"github.com/weworksandbox/lingo/expr"
	"github.com/weworksandbox/lingo/sql"
)

func As(alias string) TSalesByStore {
	t := New()
	if alias != "" {
		t.alias = expr.Lit(alias)
	}
	return t
}

func New() TSalesByStore {
	return TSalesByStore{}
}

type TSalesByStore struct {
	alias lingo.Expression
}

// lingo.Table Functions

func (t TSalesByStore) GetTableName() string {
	return "sales_by_store"
}

func (t TSalesByStore) GetColumns() []lingo.Expression {
	return []lingo.Expression{
		t.Store(),
		t.Manager(),
		t.TotalSales(),
	}
}

func (t TSalesByStore) ToSQL(d lingo.Dialect) (sql.Data, error) {
	return expr.Table(t).ToSQL(d)
}

func (t TSalesByStore) GetName() lingo.Expression {
	return expr.TableName(t)
}

func (t TSalesByStore) GetAlias() lingo.Expression {
	return t.alias
}

// Column Functions

func (t TSalesByStore) Store() expr.String {
	return expr.Column(t, expr.Lit("store")).ToSQL
}

func (t TSalesByStore) Manager() expr.String {
	return expr.Column(t, expr.Lit("manager")).ToSQL
}

func (t TSalesByStore) TotalSales() expr.Binary {
	return expr.Column(t, expr.Lit("total_sales")).ToSQL
}
