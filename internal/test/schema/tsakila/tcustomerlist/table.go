// Code generated by Lingo for table sakila.customer_list - DO NOT EDIT

// +build !nolingo

package tcustomerlist

import (
	"github.com/weworksandbox/lingo"
	"github.com/weworksandbox/lingo/expr/path"
	"github.com/weworksandbox/lingo/sql"
)

func As(alias string) TCustomerList {
	return newTCustomerList(alias)
}

func New() TCustomerList {
	return newTCustomerList("")
}

func newTCustomerList(alias string) TCustomerList {
	t := TCustomerList{
		_alias: alias,
	}
	t.id = path.NewInt16(t, "ID")
	t.name = path.NewString(t, "name")
	t.address = path.NewString(t, "address")
	t.zipCode = path.NewString(t, "zip code")
	t.phone = path.NewString(t, "phone")
	t.city = path.NewString(t, "city")
	t.country = path.NewString(t, "country")
	t.notes = path.NewString(t, "notes")
	t.sID = path.NewInt8(t, "SID")
	return t
}

type TCustomerList struct {
	_alias string

	id      path.Int16
	name    path.String
	address path.String
	zipCode path.String
	phone   path.String
	city    path.String
	country path.String
	notes   path.String
	sID     path.Int8
}

// lingo.Table Functions

func (t TCustomerList) GetColumns() []lingo.Column {
	return []lingo.Column{
		t.id,
		t.name,
		t.address,
		t.zipCode,
		t.phone,
		t.city,
		t.country,
		t.notes,
		t.sID,
	}
}

func (t TCustomerList) ToSQL(d lingo.Dialect) (sql.Data, error) {
	return path.ExpandTableWithDialect(d, t)
}

func (t TCustomerList) GetAlias() string {
	return t._alias
}

func (t TCustomerList) GetName() string {
	return "customer_list"
}

func (t TCustomerList) GetParent() string {
	return "sakila"
}

// Column Functions

func (t TCustomerList) Id() path.Int16 {
	return t.id
}

func (t TCustomerList) Name() path.String {
	return t.name
}

func (t TCustomerList) Address() path.String {
	return t.address
}

func (t TCustomerList) ZipCode() path.String {
	return t.zipCode
}

func (t TCustomerList) Phone() path.String {
	return t.phone
}

func (t TCustomerList) City() path.String {
	return t.city
}

func (t TCustomerList) Country() path.String {
	return t.country
}

func (t TCustomerList) Notes() path.String {
	return t.notes
}

func (t TCustomerList) SID() path.Int8 {
	return t.sID
}
