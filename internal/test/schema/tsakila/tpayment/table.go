// Code generated by Lingo for table sakila.payment - DO NOT EDIT

// +build !nolingo

package tpayment

import (
	"github.com/weworksandbox/lingo"
	"github.com/weworksandbox/lingo/expr/path"
	"github.com/weworksandbox/lingo/sql"
)

func As(alias string) TPayment {
	return newTPayment(alias)
}

func New() TPayment {
	return newTPayment("")
}

func newTPayment(alias string) TPayment {
	t := TPayment{
		_alias: alias,
	}
	t.paymentId = path.NewInt16(t, "payment_id")
	t.customerId = path.NewInt16(t, "customer_id")
	t.staffId = path.NewInt8(t, "staff_id")
	t.rentalId = path.NewInt(t, "rental_id")
	t.amount = path.NewBinary(t, "amount")
	t.paymentDate = path.NewTime(t, "payment_date")
	t.lastUpdate = path.NewTime(t, "last_update")
	return t
}

type TPayment struct {
	_alias string

	paymentId   path.Int16
	customerId  path.Int16
	staffId     path.Int8
	rentalId    path.Int
	amount      path.Binary
	paymentDate path.Time
	lastUpdate  path.Time
}

// lingo.Table Functions

func (t TPayment) GetColumns() []lingo.Column {
	return []lingo.Column{
		t.paymentId,
		t.customerId,
		t.staffId,
		t.rentalId,
		t.amount,
		t.paymentDate,
		t.lastUpdate,
	}
}

func (t TPayment) ToSQL(d lingo.Dialect) (sql.Data, error) {
	return path.ExpandTableWithDialect(d, t)
}

func (t TPayment) GetAlias() string {
	return t._alias
}

func (t TPayment) GetName() string {
	return "payment"
}

func (t TPayment) GetParent() string {
	return "sakila"
}

// Column Functions

func (t TPayment) PaymentId() path.Int16 {
	return t.paymentId
}

func (t TPayment) CustomerId() path.Int16 {
	return t.customerId
}

func (t TPayment) StaffId() path.Int8 {
	return t.staffId
}

func (t TPayment) RentalId() path.Int {
	return t.rentalId
}

func (t TPayment) Amount() path.Binary {
	return t.amount
}

func (t TPayment) PaymentDate() path.Time {
	return t.paymentDate
}

func (t TPayment) LastUpdate() path.Time {
	return t.lastUpdate
}
