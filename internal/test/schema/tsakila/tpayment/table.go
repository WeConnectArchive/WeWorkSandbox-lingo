// Code generated by Lingo for table sakila.payment - DO NOT EDIT

// +build !nolingo

package tpayment

import (
	"github.com/weworksandbox/lingo"
	"github.com/weworksandbox/lingo/expr"
	"github.com/weworksandbox/lingo/sql"
)

func As(alias string) TPayment {
	t := New()
	if alias != "" {
		t.alias = expr.Lit(alias)
	}
	return t
}

func New() TPayment {
	return TPayment{}
}

type TPayment struct {
	alias lingo.Expression
}

// lingo.Table Functions

func (t TPayment) GetTableName() string {
	return "payment"
}

func (t TPayment) GetColumns() []lingo.Expression {
	return []lingo.Expression{
		t.PaymentId(),
		t.CustomerId(),
		t.StaffId(),
		t.RentalId(),
		t.Amount(),
		t.PaymentDate(),
		t.LastUpdate(),
	}
}

func (t TPayment) ToSQL(d lingo.Dialect) (sql.Data, error) {
	return expr.Table(t).ToSQL(d)
}

func (t TPayment) GetName() lingo.Expression {
	return expr.TableName(t)
}

func (t TPayment) GetAlias() lingo.Expression {
	return t.alias
}

// Column Functions

func (t TPayment) PaymentId() expr.Int16 {
	return expr.Column(t, expr.Lit("payment_id")).ToSQL
}

func (t TPayment) CustomerId() expr.Int16 {
	return expr.Column(t, expr.Lit("customer_id")).ToSQL
}

func (t TPayment) StaffId() expr.Int8 {
	return expr.Column(t, expr.Lit("staff_id")).ToSQL
}

func (t TPayment) RentalId() expr.Int {
	return expr.Column(t, expr.Lit("rental_id")).ToSQL
}

func (t TPayment) Amount() expr.Binary {
	return expr.Column(t, expr.Lit("amount")).ToSQL
}

func (t TPayment) PaymentDate() expr.Time {
	return expr.Column(t, expr.Lit("payment_date")).ToSQL
}

func (t TPayment) LastUpdate() expr.Time {
	return expr.Column(t, expr.Lit("last_update")).ToSQL
}
