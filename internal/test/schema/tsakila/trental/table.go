// Code generated by Lingo for table sakila.rental - DO NOT EDIT

// +build !nolingo

package trental

import (
	"github.com/weworksandbox/lingo"
	"github.com/weworksandbox/lingo/expr/path"
	"github.com/weworksandbox/lingo/sql"
)

func As(alias string) TRental {
	return newTRental(alias)
}

func New() TRental {
	return newTRental("")
}

func newTRental(alias string) TRental {
	t := TRental{
		_alias: alias,
	}
	t.rentalId = path.NewInt(t, "rental_id")
	t.rentalDate = path.NewTime(t, "rental_date")
	t.inventoryId = path.NewInt32(t, "inventory_id")
	t.customerId = path.NewInt16(t, "customer_id")
	t.returnDate = path.NewTime(t, "return_date")
	t.staffId = path.NewInt8(t, "staff_id")
	t.lastUpdate = path.NewTime(t, "last_update")
	return t
}

type TRental struct {
	_alias string

	rentalId    path.Int
	rentalDate  path.Time
	inventoryId path.Int32
	customerId  path.Int16
	returnDate  path.Time
	staffId     path.Int8
	lastUpdate  path.Time
}

// lingo.Table Functions

func (t TRental) GetColumns() []lingo.Column {
	return []lingo.Column{
		t.rentalId,
		t.rentalDate,
		t.inventoryId,
		t.customerId,
		t.returnDate,
		t.staffId,
		t.lastUpdate,
	}
}

func (t TRental) ToSQL(d lingo.Dialect) (sql.Data, error) {
	return path.ExpandTableWithDialect(d, t)
}

func (t TRental) GetAlias() string {
	return t._alias
}

func (t TRental) GetName() string {
	return "rental"
}

func (t TRental) GetParent() string {
	return "sakila"
}

// Column Functions

func (t TRental) RentalId() path.Int {
	return t.rentalId
}

func (t TRental) RentalDate() path.Time {
	return t.rentalDate
}

func (t TRental) InventoryId() path.Int32 {
	return t.inventoryId
}

func (t TRental) CustomerId() path.Int16 {
	return t.customerId
}

func (t TRental) ReturnDate() path.Time {
	return t.returnDate
}

func (t TRental) StaffId() path.Int8 {
	return t.staffId
}

func (t TRental) LastUpdate() path.Time {
	return t.lastUpdate
}
