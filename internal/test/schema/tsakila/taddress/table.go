// Code generated by Lingo for table sakila.address - DO NOT EDIT

// +build !nolingo

package taddress

import (
	"github.com/weworksandbox/lingo"
	"github.com/weworksandbox/lingo/expr"
	"github.com/weworksandbox/lingo/sql"
)

func As(alias string) TAddress {
	t := New()
	if alias != "" {
		t.alias = expr.Lit(alias)
	}
	return t
}

func New() TAddress {
	return TAddress{}
}

type TAddress struct {
	alias lingo.Expression
}

// lingo.Table Functions

func (t TAddress) GetTableName() string {
	return "address"
}

func (t TAddress) GetColumns() []lingo.Expression {
	return []lingo.Expression{
		t.AddressId(),
		t.Address(),
		t.Address2(),
		t.District(),
		t.CityId(),
		t.PostalCode(),
		t.Phone(),
		t.Location(),
		t.LastUpdate(),
	}
}

func (t TAddress) ToSQL(d lingo.Dialect) (sql.Data, error) {
	return expr.Table(t).ToSQL(d)
}

func (t TAddress) GetName() lingo.Expression {
	return expr.TableName(t)
}

func (t TAddress) GetAlias() lingo.Expression {
	return t.alias
}

// Column Functions

func (t TAddress) AddressId() expr.Int16 {
	return expr.Column(t, expr.Lit("address_id")).ToSQL
}

func (t TAddress) Address() expr.String {
	return expr.Column(t, expr.Lit("address")).ToSQL
}

func (t TAddress) Address2() expr.String {
	return expr.Column(t, expr.Lit("address2")).ToSQL
}

func (t TAddress) District() expr.String {
	return expr.Column(t, expr.Lit("district")).ToSQL
}

func (t TAddress) CityId() expr.Int16 {
	return expr.Column(t, expr.Lit("city_id")).ToSQL
}

func (t TAddress) PostalCode() expr.String {
	return expr.Column(t, expr.Lit("postal_code")).ToSQL
}

func (t TAddress) Phone() expr.String {
	return expr.Column(t, expr.Lit("phone")).ToSQL
}

func (t TAddress) Location() expr.UnsupportedType {
	return expr.Column(t, expr.Lit("location")).ToSQL
}

func (t TAddress) LastUpdate() expr.Time {
	return expr.Column(t, expr.Lit("last_update")).ToSQL
}
