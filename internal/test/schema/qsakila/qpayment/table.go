// Code generated by Lingo for table sakila.payment - DO NOT EDIT

package qpayment

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QPayment {
	return newQPayment(alias)
}

func New() QPayment {
	return newQPayment("")
}

func newQPayment(alias string) QPayment {
	q := QPayment{_alias: alias}
	q.paymentId = path.NewInt16Path(q, "payment_id")
	q.customerId = path.NewInt16Path(q, "customer_id")
	q.staffId = path.NewInt8Path(q, "staff_id")
	q.rentalId = path.NewIntPath(q, "rental_id")
	q.amount = path.NewBinaryPath(q, "amount")
	q.paymentDate = path.NewTimePath(q, "payment_date")
	q.lastUpdate = path.NewTimePath(q, "last_update")
	return q
}

type QPayment struct {
	_alias      string
	paymentId   path.Int16
	customerId  path.Int16
	staffId     path.Int8
	rentalId    path.Int
	amount      path.Binary
	paymentDate path.Time
	lastUpdate  path.Time
}

// core.Table Functions

func (q QPayment) GetColumns() []core.Column {
	return []core.Column{
		q.paymentId,
		q.customerId,
		q.staffId,
		q.rentalId,
		q.amount,
		q.paymentDate,
		q.lastUpdate,
	}
}

func (q QPayment) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QPayment) GetAlias() string {
	return q._alias
}

func (q QPayment) GetName() string {
	return "payment"
}

func (q QPayment) GetParent() string {
	return "sakila"
}

// Column Functions

func (q QPayment) PaymentId() path.Int16 {
	return q.paymentId
}

func (q QPayment) CustomerId() path.Int16 {
	return q.customerId
}

func (q QPayment) StaffId() path.Int8 {
	return q.staffId
}

func (q QPayment) RentalId() path.Int {
	return q.rentalId
}

func (q QPayment) Amount() path.Binary {
	return q.amount
}

func (q QPayment) PaymentDate() path.Time {
	return q.paymentDate
}

func (q QPayment) LastUpdate() path.Time {
	return q.lastUpdate
}
