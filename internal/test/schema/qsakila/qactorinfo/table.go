// Code generated by Lingo for table sakila.actor_info - DO NOT EDIT

package qactorinfo

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QActorInfo {
	return newQActorInfo(alias)
}

func New() QActorInfo {
	return newQActorInfo("")
}

func newQActorInfo(alias string) QActorInfo {
	q := QActorInfo{_alias: alias}
	q.actorId = path.NewInt16Path(q, "actor_id")
	q.firstName = path.NewStringPath(q, "first_name")
	q.lastName = path.NewStringPath(q, "last_name")
	q.filmInfo = path.NewStringPath(q, "film_info")
	return q
}

type QActorInfo struct {
	_alias    string
	actorId   path.Int16Path
	firstName path.StringPath
	lastName  path.StringPath
	filmInfo  path.StringPath
}

// core.Table Functions

func (q QActorInfo) GetColumns() []core.Column {
	return []core.Column{
		q.actorId,
		q.firstName,
		q.lastName,
		q.filmInfo,
	}
}

func (q QActorInfo) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QActorInfo) GetAlias() string {
	return q._alias
}

func (q QActorInfo) GetName() string {
	return "actor_info"
}

func (q QActorInfo) GetParent() string {
	return "sakila"
}

// Column Functions

func (q QActorInfo) ActorId() path.Int16Path {
	return q.actorId
}

func (q QActorInfo) FirstName() path.StringPath {
	return q.firstName
}

func (q QActorInfo) LastName() path.StringPath {
	return q.lastName
}

func (q QActorInfo) FilmInfo() path.StringPath {
	return q.filmInfo
}
