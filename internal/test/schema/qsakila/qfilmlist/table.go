// Code generated by Lingo for table sakila.film_list - DO NOT EDIT

package qfilmlist

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
	"github.com/weworksandbox/lingo/pkg/core/sql"
)

func As(alias string) QFilmList {
	return newQFilmList(alias)
}

func New() QFilmList {
	return newQFilmList("")
}

func newQFilmList(alias string) QFilmList {
	q := QFilmList{_alias: alias}
	q.fid = path.NewInt16(q, "FID")
	q.title = path.NewString(q, "title")
	q.description = path.NewString(q, "description")
	q.category = path.NewString(q, "category")
	q.price = path.NewBinary(q, "price")
	q.length = path.NewInt16(q, "length")
	q.rating = path.NewString(q, "rating")
	q.actors = path.NewString(q, "actors")
	return q
}

type QFilmList struct {
	_alias      string
	fid         path.Int16
	title       path.String
	description path.String
	category    path.String
	price       path.Binary
	length      path.Int16
	rating      path.String
	actors      path.String
}

// core.Table Functions

func (q QFilmList) GetColumns() []core.Column {
	return []core.Column{
		q.fid,
		q.title,
		q.description,
		q.category,
		q.price,
		q.length,
		q.rating,
		q.actors,
	}
}

func (q QFilmList) ToSQL(d core.Dialect) (sql.Data, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QFilmList) GetAlias() string {
	return q._alias
}

func (q QFilmList) GetName() string {
	return "film_list"
}

func (q QFilmList) GetParent() string {
	return "sakila"
}

// Column Functions

func (q QFilmList) Fid() path.Int16 {
	return q.fid
}

func (q QFilmList) Title() path.String {
	return q.title
}

func (q QFilmList) Description() path.String {
	return q.description
}

func (q QFilmList) Category() path.String {
	return q.category
}

func (q QFilmList) Price() path.Binary {
	return q.price
}

func (q QFilmList) Length() path.Int16 {
	return q.length
}

func (q QFilmList) Rating() path.String {
	return q.rating
}

func (q QFilmList) Actors() path.String {
	return q.actors
}
