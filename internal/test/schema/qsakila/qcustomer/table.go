// Code generated by Lingo for table sakila.customer - DO NOT EDIT

package qcustomer

import (
	"github.com/weworksandbox/lingo/pkg/core"
	"github.com/weworksandbox/lingo/pkg/core/path"
)

func As(alias string) QCustomer {
	return newQCustomer(alias)
}

func New() QCustomer {
	return newQCustomer("")
}

func newQCustomer(alias string) QCustomer {
	q := QCustomer{_alias: alias}
	q.customerId = path.NewInt16Path(q, "customer_id")
	q.storeId = path.NewBoolPath(q, "store_id")
	q.firstName = path.NewStringPath(q, "first_name")
	q.lastName = path.NewStringPath(q, "last_name")
	q.email = path.NewStringPath(q, "email")
	q.addressId = path.NewInt16Path(q, "address_id")
	q.active = path.NewBoolPath(q, "active")
	q.createDate = path.NewTimePath(q, "create_date")
	q.lastUpdate = path.NewTimePath(q, "last_update")
	return q
}

type QCustomer struct {
	_alias     string
	customerId path.Int16Path
	storeId    path.BoolPath
	firstName  path.StringPath
	lastName   path.StringPath
	email      path.StringPath
	addressId  path.Int16Path
	active     path.BoolPath
	createDate path.TimePath
	lastUpdate path.TimePath
}

// core.Table Functions

func (q QCustomer) GetColumns() []core.Column {
	return []core.Column{
		q.customerId,
		q.storeId,
		q.firstName,
		q.lastName,
		q.email,
		q.addressId,
		q.active,
		q.createDate,
		q.lastUpdate,
	}
}

func (q QCustomer) GetSQL(d core.Dialect) (core.SQL, error) {
	return path.ExpandTableWithDialect(d, q)
}

func (q QCustomer) GetAlias() string {
	return q._alias
}

func (q QCustomer) GetName() string {
	return "customer"
}

func (q QCustomer) GetParent() string {
	return "sakila"
}

// Column Functions

func (q QCustomer) CustomerId() path.Int16Path {
	return q.customerId
}

func (q QCustomer) StoreId() path.BoolPath {
	return q.storeId
}

func (q QCustomer) FirstName() path.StringPath {
	return q.firstName
}

func (q QCustomer) LastName() path.StringPath {
	return q.lastName
}

func (q QCustomer) Email() path.StringPath {
	return q.email
}

func (q QCustomer) AddressId() path.Int16Path {
	return q.addressId
}

func (q QCustomer) Active() path.BoolPath {
	return q.active
}

func (q QCustomer) CreateDate() path.TimePath {
	return q.createDate
}

func (q QCustomer) LastUpdate() path.TimePath {
	return q.lastUpdate
}
